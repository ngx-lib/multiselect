{"version":3,"sources":["webpack:///./src/app/custom-elements/code/code-tabs.component.ts","webpack:///./src/app/custom-elements/code/code-tabs.module.ts","webpack:///./node_modules/@angular/material/esm5/tabs.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/cdk/esm5/observers.es5.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabGroup.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabBody.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTabHeader.html","webpack:///./node_modules/@angular/material/tabs/typings/index.d.ts.MatTab.html","webpack:///./src/app/custom-elements/code/code-tabs.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/custom-elements/code/code-tabs.component.ts.CodeTabsComponent.html","webpack:///./src/app/custom-elements/code/code-tabs.module.ngfactory.js.pre-build-optimizer.js"],"names":["CodeTabsComponent","prototype","ngOnInit","this","tabs","codeExamples","content","nativeElement","querySelectorAll","i","length","push","getTabInfo","ngAfterViewInit","_this","codeComponents","toArray","forEach","codeComponent","code","tabContent","class","getAttribute","innerHTML","language","linenums","path","region","title","code_tabs_module_CodeTabsModule","customElementComponent","_MAT_INK_BAR_POSITIONER","core","providedIn","factory","element","left","offsetLeft","width","offsetWidth","MatInkBar","_elementRef","_ngZone","_inkBarPositioner","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","style","visibility","hide","positions","inkBar","tabs_es5_MatTabLabel","_super","MatTabLabel","templateRef","viewContainerRef","call","Object","tslib_es6","portal_es5","tabs_es5_MatTab","MatTab","_viewContainerRef","textLabel","_contentPortal","_labelChange","Subject","_disableChange","position","origin","isActive","defineProperty","get","enumerable","configurable","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","_explicitContent","_implicitContent","core_es5","tabs_es5_MatTabBodyPortal","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","tabs_es5_MatTabBody","MatTabBody","_dir","changeDetectorRef","_dirChangeSubscription","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","set","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","e","toState","emit","clientHeight","_onTranslateTabComplete","fromState","_getLayoutDirection","value","tabs_es5_MatTabLabelWrapper","MatTabLabelWrapper","elementRef","focus","getOffsetLeft","getOffsetWidth","tabs_es5_MatTabHeader","MatTabHeader","_changeDetectorRef","_viewportRuler","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_selectedIndex","selectFocusedIndex","indexFocused","coercion_es5","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","_updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","event","keyCode","keycodes_es5","setFirstItemActive","preventDefault","setLastItemActive","focusIndex","onKeydown","ngAfterContentInit","dirChange","of","resize","realign","a11y_es5","withHorizontalOrientation","withWrap","updateActiveItem","merge","takeUntil","newFocusIndex","_setTabFocus","_onContentChanges","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","transform","v","Math","max","min","_getMaxScrollDistance","_scrollHeader","scrollDir","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","viewLength","beforeVisiblePos","afterVisiblePos","isEnabled","selectedLabelWrapper","selectedIndex","_inkBar","nextId","tabs_es5_MatTabGroup","MatTabGroup","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","tabChangeEvent","_createChangeEvent","Promise","resolve","then","_tabs","_subscribeToTabLabels","realignInkBar","_tabHeader","_focusChanged","apply","map","concat","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","idx","_getTabIndex","MatTabsModule","observers_es5_MutationObserverFactory","MutationObserverFactory","create","callback","MutationObserver","ngInjectableDef","token","observers_es5_ContentObserver","ContentObserver","_mutationObserverFactory","_observedElements","Map","_","_cleanupObserver","observe","Observable","observer","subscription","_observeElement","_unobserveElement","has","count","stream_1","mutations","characterData","childList","subtree","stream","_a","disconnect","delete","observers_es5_CdkObserveContent","CdkObserveContent","_contentObserver","_disabled","_currentSubscription","_unsubscribe","_subscribe","_debounce","debounce","debounceTime","ObserversModule","RenderType_MatTabGroup","encapsulation","styles","data","View_MatTabGroup_3","_l","View_MatTabGroup_2","portal","_ck","_v","parent","context","$implicit","templateLabel","View_MatTabGroup_4","View_MatTabGroup_1","en","$event","ad","component","platform_es5","fesm5_animations","common","ngIf","disableRipple","_co","ariaLabel","ariaLabelledby","unbounded","View_MatTabGroup_5","View_MatTabBody_0","RenderType_MatTabBody","bidi_es5","View_MatTabGroup_0","View_MatTabHeader_0","RenderType_MatTabHeader","scrolling_es5","ngForOf","animation","type","name","definitions","offset","options","undefined","minHeight","expr","timings","View_MatTabBody_1","_portalHost","RenderType_MatTab","View_MatTab_1","View_MatTab_0","RenderType_CodeTabsComponent","View_CodeTabsComponent_2","View_CodeTabsComponent_1","code_component_ngfactory","code_component","snack_bar_es5","pretty_printer_service","copier_service","logger_service","stackblitz_service","View_CodeTabsComponent_0","typings_index_ngfactory","card_es5","dynamicHeight","CodeTabsComponentNgFactory","__webpack_require__","d","__webpack_exports__","CodeTabsModuleNgFactory","index_ngfactory","overlay_es5","button_es5","code_module"],"mappings":"mHAqBAA,EAAA,oBAAAA,KA6DA,OA5BEA,EAAAC,UAAAC,SAAA,WACEC,KAAKC,QAGL,IAFA,IAAMC,EAAeF,KAAKG,QAAQC,cAAcC,iBAAiB,aAExDC,EAAI,EAAGA,EAAIJ,EAAaK,OAAQD,IAEvCN,KAAKC,KAAKO,KAAKR,KAAKS,WADDP,EAAaI,MAKpCT,EAAAC,UAAAY,gBAAA,eAAAC,EAAAX,KACEA,KAAKY,eAAeC,UAAUC,QAAQ,SAACC,EAAeT,GACpDS,EAAcC,KAAOL,EAAKV,KAAKK,GAAGU,QAK9BnB,EAAAC,UAAAW,WAAR,SAAmBQ,GACjB,OACEC,MAAOD,EAAWE,aAAa,SAC/BH,KAAMC,EAAWG,UACjBC,SAAUJ,EAAWE,aAAa,YAClCG,SAAUL,EAAWE,aAAa,aAAenB,KAAKsB,SACtDC,KAAMN,EAAWE,aAAa,SAAW,GACzCK,OAAQP,EAAWE,aAAa,WAAa,GAC7CM,MAAOR,EAAWE,aAAa,WAGrCtB,EA7DA,GCdA6B,EAAA,WAQA,OARA,WAOE1B,KAAA2B,uBAAoC9B,GAPtC,uLCuBqB+B,EAA0B,IAAIC,EAAA,EAAe,uBAC9DC,WAAY,OACZC,QAOJ,WAOI,OAN8B,SAAUC,GACpC,OACIC,KAAMD,GAAWA,EAAQE,YAAc,GAAK,KAAO,IACnDC,MAAOH,GAAWA,EAAQI,aAAe,GAAK,KAAO,SAS7DC,EAA2B,WAC3B,SAAAA,EAAmBC,EAAaC,EAASC,GACrCxC,KAAKsC,YAAcA,EACnBtC,KAAKuC,QAAUA,EACfvC,KAAKwC,kBAAoBA,EAqF7B,OAxEAH,EAAUvC,UAAU2C,eAMpB,SAAUT,GACN,IAAIrB,EAAQX,KACZA,KAAK0C,OACgC,oBAA1BC,sBACP3C,KAAKuC,QAAQK,kBAAkB,WAC3BD,sBAAsB,WAAc,OAAOhC,EAAMkC,WAAWb,OAIhEhC,KAAK6C,WAAWb,IAQxBK,EAAUvC,UAAU4C,KAIpB,WACI1C,KAAKsC,YAAYlC,cAAc0C,MAAMC,WAAa,WAOtDV,EAAUvC,UAAUkD,KAIpB,WACIhD,KAAKsC,YAAYlC,cAAc0C,MAAMC,WAAa,UAOtDV,EAAUvC,UAAU+C,WAKpB,SAAUb,GACN,IAAqBiB,EAAYjD,KAAKwC,kBAAkBR,GACnCkB,EAASlD,KAAKsC,YAAYlC,cAC/C8C,EAAOJ,MAAMb,KAAOgB,EAAUhB,KAC9BiB,EAAOJ,MAAMX,MAAQc,EAAUd,OAgB5BE,EAzFmB,GAmG1Bc,EAA6B,SAAUC,GAEvC,SAAAC,EAAqBC,EAAaC,GAC9B,OAAOH,EAAOI,KAAKxD,KAAMsD,EAAaC,IAAqBvD,KAY/D,OAdAyD,OAAAC,EAAA,EAAAD,CAAUJ,EAAaD,GAchBC,EAfqB,CAgB9BM,EAAA,GAuCEC,EAAwB,SAAUR,GAElC,SAAAS,EAAgBC,GACZ,IAAInD,EAAQyC,EAAOI,KAAKxD,OAASA,KAgCjC,OA/BAW,EAAMmD,kBAAoBA,EAI1BnD,EAAMoD,UAAY,GAIlBpD,EAAMqD,eAAiB,KAIvBrD,EAAMsD,aAAe,IAAIC,EAAA,EAIzBvD,EAAMwD,eAAiB,IAAID,EAAA,EAK3BvD,EAAMyD,SAAW,KAKjBzD,EAAM0D,OAAS,KAIf1D,EAAM2D,UAAW,EACV3D,EAsEX,OAxGA8C,OAAAC,EAAA,EAAAD,CAAUI,EAAQT,GAoClBK,OAAOc,eAAeV,EAAO/D,UAAW,WAEpC0E,IAIA,WACI,OAAOxE,KAAKgE,gBAEhBS,YAAY,EACZC,cAAc,IAMlBb,EAAO/D,UAAU6E,YAIjB,SAAUC,GACFA,EAAQC,eAAe,cACvB7E,KAAKiE,aAAaa,OAElBF,EAAQC,eAAe,aACvB7E,KAAKmE,eAAeW,QAM5BjB,EAAO/D,UAAUiF,YAGjB,WACI/E,KAAKmE,eAAea,WACpBhF,KAAKiE,aAAae,YAKtBnB,EAAO/D,UAAUC,SAGjB,WACIC,KAAKgE,eAAiB,IAAIL,EAAA,EAAe3D,KAAKiF,kBAAoBjF,KAAKkF,iBAAkBlF,KAAK8D,oBAuB3FD,EAzGgB,CADaJ,OAAA0B,EAAA,EAAA1B,CAJpC,eAuJA2B,EAAkC,SAAUhC,GAE5C,SAAAiC,EAA0BC,EAA0B/B,EAAkBgC,GAClE,IAAI5E,EAAQyC,EAAOI,KAAKxD,KAAMsF,EAA0B/B,IAAqBvD,KAU7E,OATAW,EAAM4E,MAAQA,EAId5E,EAAM6E,cAAgBC,EAAA,EAAaC,MAInC/E,EAAMgF,YAAcF,EAAA,EAAaC,MAC1B/E,EAkDX,OA9DA8C,OAAAC,EAAA,EAAAD,CAAU4B,EAAkBjC,GAmB5BiC,EAAiBvF,UAAUC,SAI3B,WACI,IAAIY,EAAQX,KACZoD,EAAOtD,UAAUC,SAASyD,KAAKxD,MAC/BA,KAAKwF,cAAgBxF,KAAKuF,MAAMK,iBAC3BC,KAAKpC,OAAAqC,EAAA,EAAArC,CAAUzD,KAAKuF,MAAMQ,kBAAkB/F,KAAKuF,MAAMS,aACvDC,UAAU,SAAUC,GACjBA,IAAgBvF,EAAMwF,eACtBxF,EAAMyF,OAAOzF,EAAM4E,MAAMc,YAGjCrG,KAAK2F,YAAc3F,KAAKuF,MAAMe,oBAAoBL,UAAU,WACxDtF,EAAM4F,YAQdlB,EAAiBvF,UAAUiF,YAI3B,WACI3B,EAAOtD,UAAUiF,YAAYvB,KAAKxD,MAClCA,KAAKwF,cAAcgB,cACnBxG,KAAK2F,YAAYa,eAadnB,EA/D0B,CAgEnC1B,EAAA,GAKE8C,EAA4B,WAC5B,SAAAC,EAAoBpE,EAAaqE,EAMjCC,GACI,IAAIjG,EAAQX,KACZA,KAAKsC,YAAcA,EACnBtC,KAAK2G,KAAOA,EAIZ3G,KAAK6G,uBAAyBpB,EAAA,EAAaC,MAI3C1F,KAAK8G,aAAe,IAAIjF,EAAA,EAIxB7B,KAAK4F,iBAAmB,IAAI/D,EAAA,EAI5B7B,KAAKsG,oBAAsB,IAAIzE,EAAA,EAI/B7B,KAAK+G,YAAc,IAAIlF,EAAA,GAAa,GAChC7B,KAAK2G,MAAQC,IACb5G,KAAK6G,uBAAyB7G,KAAK2G,KAAKK,OAAOf,UAAU,SAAUgB,GAC/DtG,EAAMuG,+BAA+BD,GACrCL,EAAkBO,kBA4K9B,OAxKA1D,OAAOc,eAAemC,EAAW5G,UAAW,YACxCsH,IAKA,SAAUhD,GACNpE,KAAKqH,eAAiBjD,EACtBpE,KAAKkH,kCAETzC,YAAY,EACZC,cAAc,IAWlBgC,EAAW5G,UAAUC,SAKrB,WAC0B,UAAlBC,KAAKgG,WAAwC,MAAfhG,KAAKqE,SACnCrE,KAAKgG,UAAYhG,KAAKsH,+BAM9BZ,EAAW5G,UAAUiF,YAGrB,WACI/E,KAAK6G,uBAAuBL,eAMhCE,EAAW5G,UAAUyH,uBAIrB,SAAUC,GACN,IAAqBtB,EAAclG,KAAK+F,kBAAkByB,EAAEC,SAC5DzH,KAAK4F,iBAAiB8B,KAAKxB,GACvBA,GACAlG,KAAK8G,aAAaY,KAAK1H,KAAKsC,YAAYlC,cAAcuH,eAO9DjB,EAAW5G,UAAU8H,wBAIrB,SAAUJ,GAEFxH,KAAK+F,kBAAkByB,EAAEC,UAAYzH,KAAK+F,kBAAkB/F,KAAKgG,YACjEhG,KAAK+G,YAAYW,OAEjB1H,KAAK+F,kBAAkByB,EAAEK,aAAe7H,KAAK+F,kBAAkB/F,KAAKgG,YACpEhG,KAAKsG,oBAAoBoB,QAQjChB,EAAW5G,UAAUgI,oBAIrB,WACI,OAAO9H,KAAK2G,MAA4B,QAApB3G,KAAK2G,KAAKoB,MAAkB,MAAQ,OAQ5DrB,EAAW5G,UAAUiG,kBAKrB,SAAU3B,GACN,MAAmB,UAAZA,GACS,sBAAZA,GACY,uBAAZA,GAORsC,EAAW5G,UAAUoH,+BAKrB,SAAUD,QACM,IAARA,IAAkBA,EAAMjH,KAAK8H,uBAE7B9H,KAAKgG,UADLhG,KAAKqH,eAAiB,EACE,OAAPJ,EAAe,OAAS,QAEpCjH,KAAKqH,eAAiB,EACH,OAAPJ,EAAe,QAAU,OAGzB,UAQzBP,EAAW5G,UAAUwH,2BAKrB,WACI,IAAqBL,EAAMjH,KAAK8H,sBAChC,MAAY,OAAPb,GAAgBjH,KAAKqE,QAAU,GAAc,OAAP4C,GAAgBjH,KAAKqE,OAAS,EAC9D,qBAEJ,uBA8BJqC,EA9MoB,GAqO3BsB,EAAoC,SAAU5E,GAE9C,SAAA6E,EAA4BC,GACxB,IAAIvH,EAAQyC,EAAOI,KAAKxD,OAASA,KAEjC,OADAW,EAAMuH,WAAaA,EACZvH,EA8CX,OAlDA8C,OAAAC,EAAA,EAAAD,CAAUwE,EAAoB7E,GAW9B6E,EAAmBnI,UAAUqI,MAI7B,WACInI,KAAKkI,WAAW9H,cAAc+H,SAKlCF,EAAmBnI,UAAUsI,cAG7B,WACI,OAAOpI,KAAKkI,WAAW9H,cAAc8B,YAKzC+F,EAAmBnI,UAAUuI,eAG7B,WACI,OAAOrI,KAAKkI,WAAW9H,cAAcgC,aAgBlC6F,EAnD4B,CALaxE,OAAA0B,EAAA,EAAA1B,CAJhD,eA2FA6E,EAA8B,SAAUlF,GAExC,SAAAmF,EAAsBjG,EAAakG,EAAoBC,EAAgB9B,GACnE,IAAIhG,EAAQyC,EAAOI,KAAKxD,OAASA,KAsCjC,OArCAW,EAAM2B,YAAcA,EACpB3B,EAAM6H,mBAAqBA,EAC3B7H,EAAM8H,eAAiBA,EACvB9H,EAAMgG,KAAOA,EAIbhG,EAAM+H,gBAAkB,EAIxB/H,EAAMgI,uBAAwB,EAI9BhI,EAAMiI,WAAa,IAAI1E,EAAA,EAIvBvD,EAAMkI,yBAA0B,EAIhClI,EAAMmI,qBAAsB,EAI5BnI,EAAMoI,sBAAuB,EAC7BpI,EAAMqI,eAAiB,EAIvBrI,EAAMsI,mBAAqB,IAAIpH,EAAA,EAI/BlB,EAAMuI,aAAe,IAAIrH,EAAA,EAClBlB,EAygBX,OAjjBA8C,OAAAC,EAAA,EAAAD,CAAU8E,EAAcnF,GA0CxBK,OAAOc,eAAegE,EAAazI,UAAW,iBAC1C0E,IAIA,WAAc,OAAOxE,KAAKgJ,gBAC1B5B,IAIA,SAAUW,GACNA,EAAQtE,OAAA0F,EAAA,EAAA1F,CAAqBsE,GAC7B/H,KAAK2I,sBAAwB3I,KAAKgJ,gBAAkBjB,EACpD/H,KAAKgJ,eAAiBjB,EAClB/H,KAAKoJ,aACLpJ,KAAKoJ,YAAYC,sBAAsBtB,IAG/CtD,YAAY,EACZC,cAAc,IAKlB6D,EAAazI,UAAUwJ,sBAGvB,WAEQtJ,KAAKuJ,gBAAkBvJ,KAAKwJ,eAAejJ,SAC3CP,KAAKyJ,oBACLzJ,KAAKuJ,eAAiBvJ,KAAKwJ,eAAejJ,OAC1CP,KAAKwI,mBAAmBrB,gBAIxBnH,KAAK2I,wBACL3I,KAAK0J,eAAe1J,KAAKgJ,gBACzBhJ,KAAK2J,0BACL3J,KAAK4J,4BACL5J,KAAK2I,uBAAwB,EAC7B3I,KAAKwI,mBAAmBrB,gBAIxBnH,KAAK6J,yBACL7J,KAAK8J,2BACL9J,KAAK6J,wBAAyB,EAC9B7J,KAAKwI,mBAAmBrB,iBAOhCoB,EAAazI,UAAUiK,eAIvB,SAAUC,GACN,OAAQA,EAAMC,SACV,KAAKC,EAAA,EACDlK,KAAKoJ,YAAYe,qBACjBH,EAAMI,iBACN,MACJ,KAAKF,EAAA,EACDlK,KAAKoJ,YAAYiB,oBACjBL,EAAMI,iBACN,MACJ,KAAKF,EAAA,EACL,KAAKA,EAAA,EACDlK,KAAKiJ,mBAAmBvB,KAAK1H,KAAKsK,YAClCN,EAAMI,iBACN,MACJ,QACIpK,KAAKoJ,YAAYmB,UAAUP,KAUvCzB,EAAazI,UAAU0K,mBAIvB,WACI,IAAI7J,EAAQX,KACSyK,EAAYzK,KAAK2G,KAAO3G,KAAK2G,KAAKK,OAASvD,OAAAiH,EAAA,EAAAjH,CAAG,MAC9CkH,EAAS3K,KAAKyI,eAAezB,OAAO,KACpC4D,EAAU,WAC3BjK,EAAM8I,oBACN9I,EAAMiJ,6BAEV5J,KAAKoJ,YAAc,IAAIyB,EAAA,EAAgB7K,KAAKwJ,gBACvCsB,0BAA0B9K,KAAK8H,uBAC/BiD,WACL/K,KAAKoJ,YAAY4B,iBAAiB,GAGD,oBAA1BrI,sBAAwCA,sBAAsBiI,GAAWA,IAGhFnH,OAAAwH,EAAA,EAAAxH,CAAMgH,EAAWE,GAAQ9E,KAAKpC,OAAAyH,EAAA,EAAAzH,CAAUzD,KAAK4I,aAAa3C,UAAU,WAChE2E,IACAjK,EAAMyI,YAAY0B,0BAA0BnK,EAAMmH,yBAKtD9H,KAAKoJ,YAAYpC,OAAOnB,KAAKpC,OAAAyH,EAAA,EAAAzH,CAAUzD,KAAK4I,aAAa3C,UAAU,SAAUkF,GACzExK,EAAMuI,aAAaxB,KAAKyD,GACxBxK,EAAMyK,aAAaD,MAM3B5C,EAAazI,UAAUiF,YAGvB,WACI/E,KAAK4I,WAAW9D,OAChB9E,KAAK4I,WAAW5D,YASpBuD,EAAazI,UAAUuL,kBAIvB,WACIrL,KAAKyJ,oBACLzJ,KAAK4J,4BACL5J,KAAKwI,mBAAmBrB,gBAS5BoB,EAAazI,UAAU2J,kBAIvB,WACIzJ,KAAKsL,0BACLtL,KAAK2J,0BACL3J,KAAK8J,4BAETrG,OAAOc,eAAegE,EAAazI,UAAW,cAE1C0E,IAIA,WACI,OAAOxE,KAAKoJ,YAAiCpJ,KAAKoJ,YAA4B,gBAAI,GAGtFhC,IAKA,SAAUW,GACD/H,KAAKuL,cAAcxD,IAAU/H,KAAKsK,aAAevC,GAAU/H,KAAKoJ,aAGrEpJ,KAAKoJ,YAAYoC,cAAczD,IAEnCtD,YAAY,EACZC,cAAc,IAYlB6D,EAAazI,UAAUyL,cAMvB,SAAUE,GACN,IAAKzL,KAAKwJ,eACN,OAAO,EAEX,IAAqBkC,EAAM1L,KAAKwJ,eAAiBxJ,KAAKwJ,eAAe3I,UAAU4K,GAAS,KACxF,QAASC,IAAQA,EAAIC,UAYzBpD,EAAazI,UAAUsL,aAMvB,SAAUQ,GAIN,GAHI5L,KAAK6I,yBACL7I,KAAK0J,eAAekC,GAEpB5L,KAAKwJ,gBAAkBxJ,KAAKwJ,eAAejJ,OAAQ,CACnDP,KAAKwJ,eAAe3I,UAAU+K,GAAUzD,QAIxC,IAAqB0D,EAAc7L,KAAK8L,kBAAkB1L,cACrC6G,EAAMjH,KAAK8H,sBAE5B+D,EAAYE,WADL,OAAP9E,EACyB,EAGA4E,EAAYG,YAAcH,EAAYzJ,cAS3EmG,EAAazI,UAAUgI,oBAIvB,WACI,OAAO9H,KAAK2G,MAA4B,QAApB3G,KAAK2G,KAAKoB,MAAkB,MAAQ,OAO5DQ,EAAazI,UAAUgK,yBAIvB,WACI,IAAqBmC,EAAiBjM,KAAKiM,eACtBC,EAA4C,QAA/BlM,KAAK8H,uBAAmCmE,EAAiBA,EAK3FjM,KAAKmM,SAAS/L,cAAc0C,MAAMsJ,UAAY,cAAgBF,EAAa,OAE/EzI,OAAOc,eAAegE,EAAazI,UAAW,kBAE1C0E,IAIA,WAAc,OAAOxE,KAAK0I,iBAC1BtB,IAIA,SAAUiF,GACNrM,KAAK0I,gBAAkB4D,KAAKC,IAAI,EAAGD,KAAKE,IAAIxM,KAAKyM,wBAAyBJ,IAG1ErM,KAAK6J,wBAAyB,EAC9B7J,KAAK2J,2BAETlF,YAAY,EACZC,cAAc,IAoBlB6D,EAAazI,UAAU4M,cAUvB,SAAUC,GAGN3M,KAAKiM,iBAAgC,UAAbU,GAAyB,EAAI,GAFnB3M,KAAK8L,kBAAkB1L,cAAcgC,YAEA,GAgB3EmG,EAAazI,UAAU4J,eAQvB,SAAUkD,GACN,IAAqBC,EAAgB7M,KAAKwJ,eAAiBxJ,KAAKwJ,eAAe3I,UAAU+L,GAAc,KACvG,GAAKC,EAAL,CAIA,IACqBC,EAAiCC,EADjCC,EAAahN,KAAK8L,kBAAkB1L,cAAcgC,YAErC,OAA9BpC,KAAK8H,sBAELiF,GADAD,EAAiBD,EAAczE,iBACEyE,EAAcxE,iBAI/CyE,GADAC,EAAgB/M,KAAKmM,SAAS/L,cAAcgC,YAAcyK,EAAczE,iBACvCyE,EAAcxE,iBAEnD,IAAqB4E,EAAmBjN,KAAKiM,eACxBiB,EAAkBlN,KAAKiM,eAAiBe,EACzDF,EAAiBG,EAEjBjN,KAAKiM,gBAAkBgB,EAAmBH,EA/aR,GAib7BC,EAAgBG,IAErBlN,KAAKiM,gBAAkBc,EAAgBG,EAnbL,MAuc1C3E,EAAazI,UAAUwL,wBASvB,WACI,IAAqB6B,EAAYnN,KAAKmM,SAAS/L,cAAc4L,YAAchM,KAAKsC,YAAYlC,cAAcgC,YACrG+K,IACDnN,KAAKiM,eAAiB,GAEtBkB,IAAcnN,KAAK6I,yBACnB7I,KAAKwI,mBAAmBrB,eAE5BnH,KAAK6I,wBAA0BsE,GAqBnC5E,EAAazI,UAAU6J,wBAUvB,WAEI3J,KAAK+I,qBAA8C,GAAvB/I,KAAKiM,eACjCjM,KAAK8I,oBAAsB9I,KAAKiM,gBAAkBjM,KAAKyM,wBACvDzM,KAAKwI,mBAAmBrB,gBAiB5BoB,EAAazI,UAAU2M,sBAQvB,WAGI,OAFuCzM,KAAKmM,SAAS/L,cAAc4L,YACjChM,KAAK8L,kBAAkB1L,cAAcgC,aAC9B,GAO7CmG,EAAazI,UAAU8J,0BAIvB,WACI,IAAqBwD,EAAuBpN,KAAKwJ,gBAAkBxJ,KAAKwJ,eAAejJ,OACnFP,KAAKwJ,eAAe3I,UAAUb,KAAKqN,eAAenF,WAAW9H,cAC7D,KACJJ,KAAKsN,QAAQ7K,eAAe2K,IAgCzB7E,EAljBsB,CARa9E,OAAA0B,EAAA,EAAA1B,CAJ1C,eAwkBiB8J,EAAS,EA8B1BC,EAA6B,SAAUpK,GAEvC,SAAAqK,EAAqBvF,EAAYM,GAC7B,IAAI7H,EAAQyC,EAAOI,KAAKxD,KAAMkI,IAAelI,KAyC7C,OAxCAW,EAAM6H,mBAAqBA,EAI3B7H,EAAM+M,eAAiB,EAIvB/M,EAAMgN,sBAAwB,EAI9BhN,EAAMiN,kBAAoBnI,EAAA,EAAaC,MAIvC/E,EAAMkN,sBAAwBpI,EAAA,EAAaC,MAC3C/E,EAAMmN,gBAAiB,EACvBnN,EAAMqI,eAAiB,KAIvBrI,EAAMoN,eAAiB,QAIvBpN,EAAMqN,oBAAsB,IAAInM,EAAA,EAIhClB,EAAMsN,YAAc,IAAIpM,EAAA,EAIxBlB,EAAMuN,cAAgB,IAAIrM,EAAA,EAI1BlB,EAAMwN,kBAAoB,IAAItM,EAAA,GAAa,GAC3ClB,EAAMyN,SAAWb,IACV5M,EAgXX,OA3ZA8C,OAAAC,EAAA,EAAAD,CAAUgK,EAAarK,GA6CvBK,OAAOc,eAAekJ,EAAY3N,UAAW,iBACzC0E,IAIA,WAAc,OAAOxE,KAAK8N,gBAC1B1G,IAIA,SAAUW,GAAS/H,KAAK8N,eAAiBrK,OAAA0F,EAAA,EAAA1F,CAAsBsE,IAC/DtD,YAAY,EACZC,cAAc,IAElBjB,OAAOc,eAAekJ,EAAY3N,UAAW,iBACzC0E,IAIA,WAAc,OAAOxE,KAAKgJ,gBAC1B5B,IAIA,SAAUW,GACN/H,KAAK0N,eAAiBjK,OAAA0F,EAAA,EAAA1F,CAAqBsE,EAAO,OAEtDtD,YAAY,EACZC,cAAc,IAElBjB,OAAOc,eAAekJ,EAAY3N,UAAW,mBACzC0E,IAIA,WAAc,OAAOxE,KAAKqO,kBAC1BjH,IAIA,SAAUW,GACN,IAAqB3H,EAAgBJ,KAAKsC,YAAYlC,cACtDA,EAAckO,UAAUC,OAAO,kBAAoBvO,KAAKwO,iBACpDzG,GACA3H,EAAckO,UAAUG,IAAI,kBAAoB1G,GAEpD/H,KAAKqO,iBAAmBtG,GAE5BtD,YAAY,EACZC,cAAc,IAelB+I,EAAY3N,UAAUwJ,sBAOtB,WACI,IAAI3I,EAAQX,KAGS0O,EAAgB1O,KAAK0N,eAAiB1N,KAAK2O,eAAe3O,KAAK0N,gBAGpF,GAAI1N,KAAKgJ,gBAAkB0F,GAAwC,MAAvB1O,KAAKgJ,eAAwB,CACrE,IAAqB4F,EAAiB5O,KAAK6O,mBAAmBH,GAC9D1O,KAAKmO,kBAAkBzG,KAAKkH,GAG5BE,QAAQC,UAAUC,KAAK,WAAc,OAAOrO,EAAMqN,oBAAoBtG,KAAKgH,KAG/E1O,KAAKiP,MAAMnO,QAAQ,SAAU4K,EAAKD,GAC9BC,EAAItH,SAAWqH,EAAQiD,EACvBhD,EAAIpH,SAAWmH,IAAUiD,EAGG,MAAxB/N,EAAMqI,gBAA0C,GAAhB0C,EAAItH,UAAkBsH,EAAIrH,SAC1DqH,EAAIrH,OAASqK,EAAgB/N,EAAMqI,kBAGvChJ,KAAKgJ,iBAAmB0F,IACxB1O,KAAKgJ,eAAiB0F,EACtB1O,KAAKwI,mBAAmBrB,iBAMhCsG,EAAY3N,UAAU0K,mBAGtB,WACI,IAAI7J,EAAQX,KACZA,KAAKkP,wBAGLlP,KAAK4N,kBAAoB5N,KAAKiP,MAAMrK,QAAQqB,UAAU,WAIlD,GAHqCtF,EAAMgO,eAAehO,EAAM+M,kBAG1C/M,EAAMqI,eAExB,IADA,IAAqB/I,EAAOU,EAAMsO,MAAMpO,UACdP,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,IAC9C,GAAIL,EAAKK,GAAGgE,SAAU,CAOlB3D,EAAM+M,eAAiB/M,EAAMqI,eAAiB1I,EAC9C,MAIZK,EAAMuO,wBACNvO,EAAM6H,mBAAmBrB,kBAMjCsG,EAAY3N,UAAUiF,YAGtB,WACI/E,KAAK4N,kBAAkBpH,cACvBxG,KAAK6N,sBAAsBrH,eAO/BiH,EAAY3N,UAAUqP,cAItB,WACQnP,KAAKoP,YACLpP,KAAKoP,WAAWxF,6BAOxB6D,EAAY3N,UAAUuP,cAItB,SAAU5D,GACNzL,KAAKiO,YAAYvG,KAAK1H,KAAK6O,mBAAmBpD,KAMlDgC,EAAY3N,UAAU+O,mBAItB,SAAUpD,GACN,IAAqBzB,EAAQ,IAtPjC,aA2PI,OAJAA,EAAMyB,MAAQA,EACVzL,KAAKiP,OAASjP,KAAKiP,MAAM1O,SACzByJ,EAAM0B,IAAM1L,KAAKiP,MAAMpO,UAAU4K,IAE9BzB,GASXyD,EAAY3N,UAAUoP,sBAOtB,WACI,IAAIvO,EAAQX,KACRA,KAAK6N,uBACL7N,KAAK6N,sBAAsBrH,cAE/BxG,KAAK6N,sBAAwB5C,EAAA,EAAMqE,WAAM,EAAQtP,KAAKiP,MAAMM,IAAI,SAAU7D,GAAO,OAAOA,EAAIvH,iBAAmBqL,OAAOxP,KAAKiP,MAAMM,IAAI,SAAU7D,GAAO,OAAOA,EAAIzH,iBAAmBgC,UAAU,WAC1LtF,EAAM6H,mBAAmBrB,kBAQjCsG,EAAY3N,UAAU6O,eAKtB,SAAUlD,GAIN,OAAOa,KAAKE,IAAIxM,KAAKiP,MAAM1O,OAAS,EAAG+L,KAAKC,IAAId,GAAS,EAAG,KAQhEgC,EAAY3N,UAAU2P,eAKtB,SAAUnP,GACN,MAAO,iBAAmBN,KAAKoO,SAAW,IAAM9N,GAQpDmN,EAAY3N,UAAU4P,iBAKtB,SAAUpP,GACN,MAAO,mBAAqBN,KAAKoO,SAAW,IAAM9N,GAYtDmN,EAAY3N,UAAU6P,yBAMtB,SAAUC,GACN,GAAK5P,KAAK8N,gBAAmB9N,KAAK2N,sBAAlC,CAGA,IAAqBkC,EAAU7P,KAAK8P,gBAAgB1P,cACpDyP,EAAQ/M,MAAMiN,OAAS/P,KAAK2N,sBAAwB,KAGhD3N,KAAK8P,gBAAgB1P,cAAc4P,eACnCH,EAAQ/M,MAAMiN,OAASH,EAAY,QAQ3CnC,EAAY3N,UAAUmQ,4BAItB,WACIjQ,KAAK2N,sBAAwB3N,KAAK8P,gBAAgB1P,cAAcuH,aAChE3H,KAAK8P,gBAAgB1P,cAAc0C,MAAMiN,OAAS,GAClD/P,KAAKkO,cAAcxG,QAUvB+F,EAAY3N,UAAUoQ,aAOtB,SAAUxE,EAAKyE,EAAWC,GACjB1E,EAAIC,WACL3L,KAAKqN,cAAgB8C,EAAU7F,WAAa8F,IAUpD3C,EAAY3N,UAAUuQ,aAMtB,SAAU3E,EAAK0E,GACX,OAAI1E,EAAIC,SACG,KAEJ3L,KAAKqN,gBAAkB+C,EAAM,GAAK,GAmCtC3C,EA5ZqB,CANahK,OAAA0B,EAAA,EAAA1B,CAAWA,OAAA0B,EAAA,EAAA1B,CALpD,SAAyBnB,GACrBtC,KAAKsC,YAAcA,IAIkE,YA8tBzFgO,EACA,iDC3/DAC,EAAyC,WACzC,SAAAC,KAiBA,OAXAA,EAAwB1Q,UAAU2Q,OAIlC,SAAUC,GACN,MAAmC,oBAArBC,iBAAmC,KAAO,IAAIA,iBAAiBD,IAK9DF,EAAwBI,gBAAkBnN,OAAA5B,EAAA,EAAA4B,EAAmB1B,QAAS,WAA6C,OAAO,IAAIyO,GAA8BK,MAAOL,EAAyB1O,WAAY,SACpN0O,EAlBiC,GAuBxCM,EAAiC,WACjC,SAAAC,EAAyBC,GACrBhR,KAAKgR,yBAA2BA,EAIhChR,KAAKiR,kBAAoB,IAAIC,IAmHjC,OA9GAH,EAAgBjR,UAAUiF,YAG1B,WACI,IAAIpE,EAAQX,KACZA,KAAKiR,kBAAkBnQ,QAAQ,SAAUqQ,EAAGnP,GAAW,OAAOrB,EAAMyQ,iBAAiBpP,MAWzF+O,EAAgBjR,UAAUuR,QAK1B,SAAUrP,GACN,IAAIrB,EAAQX,KACZ,OAAOsR,EAAA,EAAWb,OAAO,SAAUc,GAC/B,IACqBC,EADS7Q,EAAM8Q,gBAAgBzP,GACTiE,UAAUsL,GACrD,OAAO,WACHC,EAAahL,cACb7F,EAAM+Q,kBAAkB1P,OAUpC+O,EAAgBjR,UAAU2R,gBAM1B,SAAUzP,GACN,GAAKhC,KAAKiR,kBAAkBU,IAAI3P,GAaThC,KAAKiR,kBAAkBzM,IAAIxC,GAAW4P,YAbnB,CACtC,IAAqBC,EAAW,IAAI3N,EAAA,EACfqN,EAAWvR,KAAKgR,yBAAyBP,OAAO,SAAUqB,GAAa,OAAOD,EAAS/M,KAAKgN,KAC7GP,GACAA,EAASF,QAAQrP,GACb+P,eAAe,EACfC,WAAW,EACXC,SAAS,IAGjBjS,KAAKiR,kBAAkB7J,IAAIpF,GAAWuP,SAAUA,EAAUW,OAAQL,EAAUD,MAAO,IAKvF,OAA0B5R,KAAKiR,kBAAkBzM,IAAIxC,GAAWkQ,QAQpEnB,EAAgBjR,UAAU4R,kBAM1B,SAAU1P,GACFhC,KAAKiR,kBAAkBU,IAAI3P,KACRhC,KAAKiR,kBAAkBzM,IAAIxC,GAAW4P,QACjC5R,KAAKiR,kBAAkBzM,IAAIxC,GAAW4P,OAC1D5R,KAAKoR,iBAAiBpP,KASlC+O,EAAgBjR,UAAUsR,iBAK1B,SAAUpP,GACN,GAAIhC,KAAKiR,kBAAkBU,IAAI3P,GAAU,CACrC,IAAImQ,EAAwBnS,KAAKiR,kBAAkBzM,IAAIxC,GAAYuP,EAAWY,EAAGZ,SAAUW,EAASC,EAAGD,OACnGX,GACAA,EAASa,aAEbF,EAAOlN,WACPhF,KAAKiR,kBAAkBoB,OAAOrQ,KAUnB+O,EAAgBH,gBAAkBnN,OAAA5B,EAAA,EAAA4B,EAAmB1B,QAAS,WAAqC,OAAO,IAAIgP,EAAgBtN,OAAA5B,EAAA,EAAA4B,CAAO8M,KAA8BM,MAAOE,EAAiBjP,WAAY,SACnNiP,EAzHyB,GA+HhCuB,EAAmC,WACnC,SAAAC,EAA2BC,EAAkBlQ,EAAaC,GACtDvC,KAAKwS,iBAAmBA,EACxBxS,KAAKsC,YAAcA,EACnBtC,KAAKuC,QAAUA,EAIfvC,KAAKgK,MAAQ,IAAInI,EAAA,EACjB7B,KAAKyS,WAAY,EACjBzS,KAAK0S,qBAAuB,KA6GhC,OA3GAjP,OAAOc,eAAegO,EAAkBzS,UAAW,YAC/C0E,IAKA,WAAc,OAAOxE,KAAKyS,WAC1BrL,IAIA,SAAUW,GACN/H,KAAKyS,UAAYhP,OAAA0F,EAAA,EAAA1F,CAAsBsE,GACnC/H,KAAKyS,UACLzS,KAAK2S,eAGL3S,KAAK4S,cAGbnO,YAAY,EACZC,cAAc,IAElBjB,OAAOc,eAAegO,EAAkBzS,UAAW,YAC/C0E,IAIA,WAAc,OAAOxE,KAAK6S,WAC1BzL,IAIA,SAAUW,GACN/H,KAAK6S,UAAYpP,OAAA0F,EAAA,EAAA1F,CAAqBsE,GACtC/H,KAAK4S,cAETnO,YAAY,EACZC,cAAc,IAKlB6N,EAAkBzS,UAAU0K,mBAG5B,WACSxK,KAAK0S,sBAAyB1S,KAAK2L,UACpC3L,KAAK4S,cAMbL,EAAkBzS,UAAUiF,YAG5B,WACI/E,KAAK2S,gBAKTJ,EAAkBzS,UAAU8S,WAG5B,WACI,IAAIjS,EAAQX,KACZA,KAAK2S,eACL,IAAqBT,EAASlS,KAAKwS,iBAAiBnB,QAAQrR,KAAKsC,YAAYlC,eAK7EJ,KAAKuC,QAAQK,kBAAkB,WAC3BjC,EAAM+R,sBACD/R,EAAMmS,SAAWZ,EAAOrM,KAAKpC,OAAAsP,EAAA,EAAAtP,CAAa9C,EAAMmS,WAAaZ,GAAQjM,UAAUtF,EAAMqJ,UAMlGuI,EAAkBzS,UAAU6S,aAG5B,WACQ3S,KAAK0S,sBACL1S,KAAK0S,qBAAqBlM,eAoB3B+L,EAvH2B,GAyHlCS,EACA,6DChRAC,EAAyBpR,EAAA,IAAUqR,cAAe,EAAGC,QAD/B,u7CAC2DC,UAErF,SAAAC,EAA4BC,GAAM,OAAOzR,EAAA,GAAQ,IAAKyR,MAAQzR,EAAA,GAAQ,EAAG,KAAM,KAAM,KAAM,KAAM,MACjG,SAAA0R,EAA4BD,GAAM,OAAOzR,EAAA,GAAQ,ICvBm1ByR,MAAAzR,EAAA,6BAAAwR,IAAAxR,EAAA,mBAAA8B,EAAA,GAAA9B,EAAA,EAAAA,EAAA,IAAA2R,QAAA,oBAAmDF,MAAAzR,EAAA,6BAAA4R,EAAAC,GAAnDD,EAAAC,EAAA,IAAaA,EAAqCC,OAAAC,QAAAC,UAAAC,gBAAA,MDwBt7B,SAAAC,EAA4BT,GAAM,OAAOzR,EAAA,GAAQ,ICxB28ByR,MAAAzR,EAAA,mCAAA4R,EAAAC,GAAAD,EAAAC,EAAA,IAAAA,EAAAC,OAAAC,QAAAC,UAAA9P,aDyB5/B,SAAAiQ,EAA4BV,GAAM,OAAOzR,EAAA,GAAQ,ICzB+HyR,MAAAzR,EAAA,qcAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,QAA+lB,UAAAF,ID2BvwBE,GADgG,IC1BwET,EAAyoBU,UD0BjyBlE,aAAawD,EAAGE,QAAQC,UAAWhS,EAAA,GAAQ6R,EAAGC,OAAQ,GAAID,EAAGE,QAAQnI,QACvE0I,GC3B0JA,GAAA,YAAAtS,EAAA,mBAAAsD,EAAA,GAAAtD,EAAA,EAAAA,EAAA,EAAAwS,EAAA,KAAAlP,EAAA,MAAAmP,EAAA,KAAA3I,UAAA,qBAAA9J,EAAA,mBAAAgJ,EAAA,GAAAhJ,EAAA,EAAAgJ,EAAA,cAAAhJ,EAAA,qBAAAmG,GAAAnG,EAAA,IAAA8J,UAAA,sBAAyoB2H,MAAAzR,EAAA,yFAAmCyR,MAAAzR,EAAA,6BAAA0R,IAAA1R,EAAA,kBAAA0S,EAAA,GAAA1S,EAAA,EAAAA,EAAA,IAAA2S,MAAA,kBAAuHlB,MAAAzR,EAAA,6BAAAkS,IAAAlS,EAAA,kBAAA0S,EAAA,GAAA1S,EAAA,EAAAA,EAAA,IAAA2S,MAAA,kBAAyC,SAAAf,EAAAC,GAA50BD,EAAAC,EAAA,IAA2iBA,EAAAE,QAAAC,UAAAlI,UAAiS+H,EAAAU,UAA9OK,eAA9lBhB,EAAAC,EAAA,IAAihBA,EAAyBE,QAAAC,UAAAlI,UAAkI8H,EAAAC,EAAA,IAAaA,EAA0BE,QAAAC,UAAAC,eAAgFL,EAAAC,EAAA,KAAaA,EAA2BE,QAAAC,UAAAC,gBAAA,SAAAL,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UAA30BX,EAAAC,EAAA,KAAoIgB,EAAAjF,eAAAiE,EAAwBE,QAAAnI,OAACiJ,EAAArE,aAAAqD,EAAAE,QAAAC,UAAAH,EAAsCE,QAAAnI,OAACiI,EAAAE,QAAAnI,MAAA,EAA6BiJ,EAAkCzF,MAAA1O,OAACmU,EAAAhF,iBAAAgE,EAA0CE,QAAAnI,OAACiJ,EAAArH,eAAAqG,EAAyCE,QAAAnI,MAACiI,EAAAE,QAAAC,UAAAc,WAAA,MAA0CjB,EAAAE,QAAAC,UAAAc,WAAAjB,EAAAE,QAAAC,UAAAe,eAAAlB,EAAAE,QAAAC,UAAAe,eAAA,KAA4FF,EAAArH,eAAAqG,EAAiDE,QAAAnI,MAAhhB5J,EAAA,GAAA6R,EAAA,GAAAmB,UAAAhT,EAAA,GAAA6R,EAAA,GAAA/H,WAAA9J,EAAA,GAAA6R,EAAA,GAAA/H,aD6BhL,SAAAmJ,EAA4BxB,GAAM,OAAOzR,EAAA,GAAQ,IC7ByjCyR,MAAAzR,EAAA,2MAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,EAAAO,EAAAhB,EAAsWU,UAAtW,MAAsQ,gBAAAH,ID+Bx2CE,GADkD,IAAtCO,EAAIzE,+BACFkE,GC/Bw4C,iBAAAF,IDkCt5CE,GADqD,IAAzCO,EAAI/E,yBAAyBuE,IAC3BC,GClColCA,GAAAY,EAAAC,IAAAnT,EAAA,mBAAA4E,GAAA5E,EAAA,KAAAoT,EAAA,GAAApT,EAAA,IAAAwE,UAAA,cAAAhC,QAAA,YAAAD,UAAA,gBAAA0C,aAAA,eAAAC,YAAA,iBAAsW,SAAA0M,EAAAC,GAAtWD,EAAAC,EAAA,IAA8LA,EAAuBE,QAAAC,UAAA1T,QAA2BuT,EAAqBE,QAAAC,UAAAxP,OAA/CqP,EAAyBE,QAAAC,UAAAzP,WAAA,SAAAqP,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UAA/OX,EAAAC,EAAA,IAAuEgB,EAAAhF,iBAAAgE,EAA0BE,QAAAnI,OAACiJ,EAAAjF,eAAAiE,EAA0CE,QAAAnI,OAACiJ,EAAArH,eAAAqG,EAAgDE,QAAAnI,SDoCjyC,SAAAyJ,EAA6B5B,GAAM,OAAOzR,EAAA,GAAQ,GAAIA,EAAA,GAAQ,UAAW,GAAKiO,gBAAiB,IAAMjO,EAAA,GAAQ,UAAW,GAAKuN,WAAY,KCpC/IkE,MAAAzR,EAAA,oNAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,EAAAO,EAAAhB,EAAgLU,UAAhL,MAA2F,iBAAAH,IDsCnFE,GAD0C,IAA9BO,EAAIrF,cAAc6E,IAChBC,GCtC4G,uBAAAF,IDyC1HE,GAD6C,KAAhCO,EAAIrH,cAAgB6G,IACnBC,GCzCtBA,GAAAgB,EAAAC,IAAAvT,EAAA,uCAAAyG,GAAAzG,EAAA,EAAAA,EAAA,EAAAwT,EAAA,KAAAJ,EAAA,KAAAR,eAAA,mBAAApH,eAAA,qBAAApE,mBAAA,qBAAAC,aAAA,iBAAArH,EAAA,gBAAA2H,eAAA,KAAgL8J,MAAAzR,EAAA,0BAAAmS,IAAAnS,EAAA,mBAAA0S,EAAA,GAAA1S,EAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAyT,SAAA,qBAAw4BhC,MAAAzR,EAAA,gHAAkDyR,MAAAzR,EAAA,6BAAAiT,IAAAjT,EAAA,mBAAA0S,EAAA,GAAA1S,EAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAyT,SAAA,qBAAsW,SAAA7B,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UAAh9CX,EAAAC,EAAA,IAA2DgB,EAA+BD,cAA/DC,EAA+BrH,eAAsHoG,EAAAC,EAAA,IAA2FgB,EAAwCzF,OAAuzBwE,EAAAC,EAAA,IAA8BgB,EAAwCzF,QAAA,SAAAwE,EAAAC,GAAhrCD,EAAAC,EAAA,IAAA7R,EAAA,GAAA6R,EAAA,GAAA7K,wBAAA,OAAAhH,EAAA,GAAA6R,EAAA,GAAA5L,yBD4CA,IAGIkN,EAAwBnT,EAAA,IAAUqR,cAAe,EAAGC,QAD/B,wHAC0DC,MAAQmC,YAAgBC,KAAM,EAAGC,KAAM,eAAgBC,cAAgBF,KAAM,EAAGC,KAAM,wDAAyDtC,QAAUqC,KAAM,EAAGrC,QAAU/G,UAAW,QAAUuJ,OAAQ,MAAQC,aAASC,IAAeL,KAAM,EAAGC,KAAM,OAAQtC,QAAUqC,KAAM,EAAGrC,QAAU/G,UAAW,2BAA4B0J,UAAW,OAASH,OAAQ,MAAQC,aAASC,IAAeL,KAAM,EAAGC,KAAM,QAAStC,QAAUqC,KAAM,EAAGrC,QAAU/G,UAAW,0BAA2B0J,UAAW,OAASH,OAAQ,MAAQC,aAASC,IAAeL,KAAM,EAAGO,KAAM,yDAA0DR,WAAaC,KAAM,EAAGrC,OAAQ,KAAM6C,QAAS,wCAA0CJ,QAAS,OAAUJ,KAAM,EAAGO,KAAM,6BAA8BR,YAAcC,KAAM,EAAGrC,QAAU/G,UAAW,4BAA8BuJ,OAAQ,OAAUH,KAAM,EAAGrC,OAAQ,KAAM6C,QAAS,yCAA2CJ,QAAS,OAAUJ,KAAM,EAAGO,KAAM,8BAA+BR,YAAcC,KAAM,EAAGrC,QAAU/G,UAAW,2BAA6BuJ,OAAQ,OAAUH,KAAM,EAAGrC,OAAQ,KAAM6C,QAAS,yCAA2CJ,QAAS,OAASA,gBAE1uC,SAAAK,EAA2B3C,GAAM,OAAOzR,EAAA,GAAQ,IAAKyR,MAAQzR,EAAA,GAAQ,EAAG,KAAM,KAAM,KAAM,KAAM,MAC1F,SAAAkT,EAA4BzB,GAAM,OAAOzR,EAAA,GAAQ,GAAIA,EAAA,GAAQ,UAAW,GAAKqU,YAAa,KElDhG5C,MAAAzR,EAAA,oKAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,EAAAO,EAAAhB,EAAqLU,UAArL,MAAuE,wBAAAH,IFoD/DE,GADmD,IAAvCO,EAAInN,uBAAuB2M,IACzBC,GEpDwG,uBAAAF,IFuDtHE,GADoD,IAAxCO,EAAI9M,wBAAwBsM,IAC1BC,GEvDtBA,GAAA,aAAqLb,MAAAzR,EAAA,6BAAAoU,IAAApU,EAAA,mBAAAuD,GAAAvD,EAAA,EAAAA,EAAA,EAAA4E,GAAA,qBAAAgN,EAAAC,GAAAD,EAAAC,EAAA,MAA4B,SAAAD,EAAAC,GAAjND,EAAAC,EAAA,IAAiNA,EAAAU,UAA3IpO,aF0DtE,IAGIoP,EAA0BvT,EAAA,IAAUqR,cAAe,EAAGC,QAD/B,guEAC4DC,UAEjF,SAAA+B,EAA8B7B,GAAM,OAAOzR,EAAA,GAAQ,GAAIA,EAAA,GAAQ,UAAW,GAAKyL,QAAS,IAAMzL,EAAA,GAAQ,UAAW,GAAKiK,kBAAmB,IAAMjK,EAAA,GAAQ,UAAW,GAAKsK,SAAU,KG/DvLmH,MAAAzR,EAAA,iRAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,QAAqP,UAAAF,IHiE7OE,GAD4C,IGhEpDT,EAAuRU,UHgE/P1H,cAAc,WAChByH,GGjEtBA,GAAA,YAAAtS,EAAA,mBAAAsD,EAAA,GAAAtD,EAAA,EAAAA,EAAA,EAAAwS,EAAA,KAAAlP,EAAA,MAAAmP,EAAA,KAAA3I,UAAA,sBAAuR2H,MAAAzR,EAAA,qGAA2DyR,MAAAzR,EAAA,0HAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,QAAuD,YAAAF,IHoEjYE,GAD2C,IGnE+RT,EAA0FU,UHmEpZrK,eAAemK,IACjBC,GGpE4TA,GAAA,aAA0Fb,MAAAzR,EAAA,mIAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,QAAkD,sBAAAF,IHuEtdE,GADwC,IGtE4XT,EAA4FU,UHsEhf/I,qBACF8I,GGvEsZA,GAAA,YAAAtS,EAAA,oBAAAyQ,GAAAxB,EAAAjP,EAAA,EAAAA,EAAA,SAAAmI,MAAA,uBAA4FsJ,MAAAzR,EAAA,iFAA4BA,EAAA,YAA+ByR,MAAAzR,EAAA,uFAAAA,EAAA,sBAAAQ,GAAAR,EAAA,EAAAA,EAAA,EAAAD,GAAA,YAAuC0R,MAAAzR,EAAA,iRAAA6R,EAAAO,EAAAC,GAAA,IAAAC,GAAA,QAAkP,UAAAF,IH0Ep1BE,GAD2C,IGzEujBT,EAAmRU,UHyEr2B1H,cAAc,UAChByH,GG1EolBA,GAAA,YAAAtS,EAAA,oBAAAsD,EAAA,GAAAtD,EAAA,EAAAA,EAAA,EAAAwS,EAAA,KAAAlP,EAAA,MAAAmP,EAAA,KAAA3I,UAAA,sBAAmR2H,MAAAzR,EAAA,sGAA+C,SAAA4R,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UAA56BX,EAAAC,EAAA,IAAuHgB,EAAA3L,sBAAA2L,EAA2DD,eAAwbhB,EAAAC,EAAA,KAAsHgB,EAAA5L,qBAAA4L,EAA0DD,gBAAA,SAAAhB,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UAA1xBX,EAAAC,EAAA,IAAmLgB,EAAiE3L,qBAApPlH,EAAA,GAAA6R,EAAA,GAAAmB,WAA0mBpB,EAAAC,EAAA,KAAiLgB,EAAgE5L,oBAAjPjH,EAAA,GAAA6R,EAAA,IAAAmB,aH6E1mB,IAGIsB,GAAoBtU,EAAA,IAAUqR,cAAe,EAAGC,UAAuBC,UAE3E,SAAAgD,GAAuB9C,GAAM,OAAOzR,EAAA,GAAQ,GIlF/BA,EAAA,YAAYyR,MAAAzR,EAAA,+BJmFnB,SAAAwU,GAAwB/C,GAAM,OAAOzR,EAAA,GAAQ,GAAIA,EAAA,GAAQ,UAAW,GAAKqD,iBAAkB,KInFjGoO,MAAAzR,EAAA,yBAAAuU,MAAa,WJ+Fb,4GK1EIE,GAA+BzU,EAAA,IAAUqR,cAAe,EAAGC,UAAkCC,UAEjG,SAAAmD,GAAkCjD,GAAM,OAAOzR,EAAA,GAAQ,ICf3CyR,MAAAzR,EAAA,wEAA8ByR,MAAAzR,EAAA,qBAAe,cAAA4R,EAAAC,GAA7CD,EAAAC,EAAA,IAAM7R,EAAA,QAAA6R,EAAAC,OAAAC,QAAAC,UAAA3S,MAAA,KAAwBuS,EAAAC,EAAA,IAAAA,EAAAC,OAAAC,QAAAC,UAAApS,SDgB1C,SAAA+U,GAAkClD,GAAM,OAAOzR,EAAA,GAAQ,IClB/CyR,MAAAzR,EAAA,qFAAAwU,GAAAF,KAAAtU,EAAA,sBAAA+B,GAAA/B,EAAA,cAAAA,EAAA,gBAAAiS,cAAA,IAAAjS,EAAA,gBAAAoD,iBAAA,KACEqO,MAAAzR,EAAA,0BAAA0U,KAAA1U,EAAA,qBAAAsB,GAAAtB,EAAA,EAAAA,EAAA,eAGAyR,MAAAzR,EAAA,4DAAA4U,EAAA,EAAAA,EAAA,IAAA5U,EAAA,sBAAA6U,GAAA,GAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,IAAA1V,UAAA,cAAAC,UAAA,cAAAC,MAAA,UAAAC,QAAA,YAAAC,OAAA,mBAK8B6R,MAAAzR,EAAA,6BAAA4R,EAAAC,GAThCD,EAAAC,EAAA,KAIED,EAAAC,EAAA,IACUA,EAAyBE,QAAAC,UAAAxS,SACzBqS,EAAyBE,QAAAC,UAAAvS,SACzBoS,EAAiBE,QAAAC,UAAAtS,KACjBmS,EAAqBE,QAAAC,UAAArS,OACrBkS,EAAmBE,QAAAC,UAAApS,QAAA,SAAAgS,EAAAC,GAL7BD,EAAAC,EAAA,IAAU7R,EAAA,QAAA6R,EAAAE,QAAAC,UAAA3S,MAAA,ODed,SAAA8V,GAAmC1D,GAAM,OAAOzR,EAAA,GAAQ,GAAIA,EAAA,GAAQ,UAAW,GAAK1B,QAAS,IAAM0B,EAAA,GAAQ,UAAW,GAAKjB,eAAgB,KCvB7I0S,MAAAzR,EAAA,iGAAoCA,EAAA,YAEpCyR,MAAAzR,EAAA,oEAAAoV,GAAA,EAAAA,GAAA,IAAApV,EAAA,kBAAAqV,GAAA,iBACE5D,MAAAzR,EAAA,6LAAAqT,EAAAjC,IAAApR,EAAA,oBAAA2L,GAAA3L,EAAA,EAAAA,EAAA,IAAA4S,eAAA,0BAAA5S,EAAA,gBAAAoN,MAAA,KACEqE,MAAAzR,EAAA,6BAAA2U,KAAA3U,EAAA,oBAAA0S,EAAA,GAAA1S,EAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAyT,SAAA,qBAA8D,SAAA7B,EAAAC,GAAA,IAAAgB,EAAAhB,EAAAU,UADhEX,EAAAC,EAAA,IAAsC,IACpCD,EAAAC,EAAA,KAAqCgB,EAAwBzU,OAAA,SAAAwT,EAAAC,GAD/DD,EAAAC,EAAA,IAAA7R,EAAA,GAAA6R,EAAA,GAAAyD,cAAA,UAAAtV,EAAA,GAAA6R,EAAA,GAAA3F,kBDsBN,IAAIqJ,GAA6BvV,EAAA,GAAQ,YAAahC,EADhD,SAAwCyT,GAAM,OAAOzR,EAAA,GAAQ,IAAKyR,MAAQzR,EAAA,GAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,eAAiB,KAAM,KAAM,KAAMmV,GAA0BV,KAAgCzU,EAAA,GAAQ,EAAG,QAAS,KAAM,EAAGhC,KAA2B,KAAM,OAAQ,SAAU4T,EAAKC,GAAMD,EAAIC,EAAI,EAAG,IAAO,QACzMpS,SAAU,gBAAmB,6CE3B3I+V,EAAAC,EAAAC,EAAA,4CAAAC,KA4BA,IAAIA,GAA0B3V,EAAA,GAAQH,KAAuB,SAAU4R,GAAM,OAAOzR,EAAA,IAASA,EAAA,GAAQ,IAAKA,EAAA,EAA6BA,EAAA,KAAuC,GAAI4V,EAAA,EAAkCA,EAAA,EAA4BhB,EAAA,EAA2BW,MAAkC,EAAGvV,EAAA,GAA8BA,EAAA,IAAkBA,EAAA,GAAQ,KAAM0S,EAAA,EAAmBA,EAAA,GAA0B1S,EAAA,GAAe,EAAG0S,EAAA,KAAyC1S,EAAA,GAAQ,KAAM0O,EAA4BA,MAAiC1O,EAAA,GAAQ,KAAM6V,GAAA,EAAYA,GAAA,GAAaA,GAAA,EAA0BA,GAAA,EAAqB7V,EAAA,EAA6B6V,GAAA,EAA2BA,GAAA,EAA8B7V,EAAA,EAAaA,EAAA,EAAW0S,EAAA,EAAaU,EAAA,IAAqBpT,EAAA,GAAQ,KAAM6V,GAAA,EAAOA,GAAA,GAAQA,GAAA,IAAc7V,EAAA,GAAQ,KAAM+U,GAAA,EAAkBA,GAAA,GAAmBE,GAAA,IAAcjV,EAAA,GAAQ,KAAMgV,GAAA,EAAmBA,GAAA,MAAwBhV,EAAA,GAAQ,WAAY0S,EAAA,EAAiBA,EAAA,MAAsB1S,EAAA,GAAQ,WAAYoT,EAAA,EAAeA,EAAA,MAAoBpT,EAAA,GAAQ,WAAYsD,EAAA,EAAqBA,EAAA,IAAuB,EAAGA,EAAA,KAA+BtD,EAAA,GAAQ,WAAYqV,GAAA,EAAmBA,GAAA,MAAwBrV,EAAA,GAAQ,WAAY8B,EAAA,EAAkBA,EAAA,MAAuB9B,EAAA,GAAQ,WAAYwS,EAAA,EAAoBA,EAAA,MAAyBxS,EAAA,GAAQ,WAAYsD,EAAA,EAAqBA,EAAA,MAA0BtD,EAAA,GAAQ,WAAYmR,EAAoBA,MAAyBnR,EAAA,GAAQ,WAAYgJ,EAAA,EAAgBA,EAAA,MAAqBhJ,EAAA,GAAQ,WAAYyO,EAAmBA,MAAwBzO,EAAA,GAAQ,WAAYwT,EAAA,EAA0BA,EAAA,MAA+BxT,EAAA,GAAQ,WAAY6V,GAAA,EAAkBA,GAAA,MAAuB7V,EAAA,GAAQ,WAAY8V,GAAA,EAAqBA,GAAA,MAA0B9V,EAAA,GAAQ,WAAY8U,GAAA,EAAuBA,GAAA,MAA4B9U,EAAA,GAAQ,WAAY+V,GAAA,EAAgBA,GAAA,MAAqB/V,EAAA,GAAQ,WAAYH,EAAmBA","file":"24.19f81cf69a96b82cf911.js","sourcesContent":["/* tslint:disable component-selector */\nimport { Component, AfterViewInit, ViewChild, Input, ViewChildren, QueryList, OnInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\nexport interface TabInfo {\n  class: string|null;\n  code: string;\n  language: string|null;\n  linenums: any;\n  path: string;\n  region: string;\n  title: string|null;\n}\n\n/**\n * Renders a set of tab group of code snippets.\n *\n * The innerHTML of the `<code-tabs>` component should contain `<code-pane>` elements.\n * Each `<code-pane>` has the same interface as the embedded `<code-example>` component.\n * The optional `linenums` attribute is the default `linenums` for each code pane.\n */\n@Component({\n  selector: 'code-tabs',\n  template: `\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.title }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [title]=\"tab.title\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  `,\n})\nexport class CodeTabsComponent implements OnInit, AfterViewInit {\n  tabs: TabInfo[];\n\n  @Input('linenums') linenums: string;\n\n  @ViewChild('content') content;\n\n  @ViewChildren(CodeComponent) codeComponents: QueryList<CodeComponent>;\n\n  ngOnInit() {\n    this.tabs = [];\n    const codeExamples = this.content.nativeElement.querySelectorAll('code-pane');\n\n    for (let i = 0; i < codeExamples.length; i++) {\n      const tabContent = codeExamples[i];\n      this.tabs.push(this.getTabInfo(tabContent));\n    }\n  }\n\n  ngAfterViewInit() {\n    this.codeComponents.toArray().forEach((codeComponent, i) => {\n      codeComponent.code = this.tabs[i].code;\n    });\n  }\n\n  /** Gets the extracted TabInfo data from the provided code-pane element. */\n  private getTabInfo(tabContent: HTMLElement): TabInfo {\n    return {\n      class: tabContent.getAttribute('class'),\n      code: tabContent.innerHTML,\n      language: tabContent.getAttribute('language'),\n      linenums: tabContent.getAttribute('linenums') || this.linenums,\n      path: tabContent.getAttribute('path') || '',\n      region: tabContent.getAttribute('region') || '',\n      title: tabContent.getAttribute('title')\n    };\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeTabsComponent } from './code-tabs.component';\nimport { MatCardModule, MatTabsModule } from '@angular/material';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, MatCardModule, MatTabsModule, CodeModule ],\n  declarations: [ CodeTabsComponent ],\n  exports: [ CodeTabsComponent ],\n  entryComponents: [ CodeTabsComponent ]\n})\nexport class CodeTabsModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeTabsComponent;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Inject, InjectionToken, NgZone, TemplateRef, ViewContainerRef, ChangeDetectionStrategy, Component, ContentChild, Input, ViewChild, ViewEncapsulation, ChangeDetectorRef, Output, EventEmitter, Optional, ComponentFactoryResolver, forwardRef, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { __extends } from 'tslib';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { mixinDisabled, mixinDisableRipple, mixinColor, MAT_RIPPLE_GLOBAL_OPTIONS, mixinTabIndex, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { Platform } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Injection token for the MatInkBar's Positioner.\n */\nvar /** @type {?} */ _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    var /** @type {?} */ method = function (element) {\n        return ({\n            left: element ? (element.offsetLeft || 0) + 'px' : '0',\n            width: element ? (element.offsetWidth || 0) + 'px' : '0',\n        });\n    };\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_elementRef, _ngZone, _inkBarPositioner) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype.alignToElement = /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.show = /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    };\n    /** Hides the ink bar. */\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.hide = /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype._setStyles = /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ positions = this._inkBarPositioner(element);\n        var /** @type {?} */ inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    };\n    MatInkBar.decorators = [\n        { type: Directive, args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatInkBar.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: NgZone, },\n        { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] },] },\n    ]; };\n    return MatInkBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    MatTabLabel.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLabel.ctorParameters = function () { return [\n        { type: TemplateRef, },\n        { type: ViewContainerRef, },\n    ]; };\n    return MatTabLabel;\n}(CdkPortal));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nvar MatTabContent = /** @class */ (function () {\n    function MatTabContent(template) {\n        this.template = template;\n    }\n    MatTabContent.decorators = [\n        { type: Directive, args: [{ selector: '[matTabContent]' },] },\n    ];\n    /** @nocollapse */\n    MatTabContent.ctorParameters = function () { return [\n        { type: TemplateRef, },\n    ]; };\n    return MatTabContent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\nvar /** @type {?} */ _MatTabMixinBase = mixinDisabled(MatTabBase);\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        _this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        _this._contentPortal = null;\n        /**\n         * Emits whenever the label changes.\n         */\n        _this._labelChange = new Subject();\n        /**\n         * Emits whenever the disable changes\n         */\n        _this._disableChange = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        _this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        _this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        _this.isActive = false;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this._contentPortal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatTab.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.hasOwnProperty('textLabel')) {\n            this._labelChange.next();\n        }\n        if (changes.hasOwnProperty('disabled')) {\n            this._disableChange.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._disableChange.complete();\n        this._labelChange.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    };\n    MatTab.decorators = [\n        { type: Component, args: [{selector: 'mat-tab',\n                    template: \"<ng-template><ng-content></ng-content></ng-template>\",\n                    inputs: ['disabled'],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matTab',\n                },] },\n    ];\n    /** @nocollapse */\n    MatTab.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n    ]; };\n    MatTab.propDecorators = {\n        \"templateLabel\": [{ type: ContentChild, args: [MatTabLabel,] },],\n        \"_explicitContent\": [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef },] },],\n        \"_implicitContent\": [{ type: ViewChild, args: [TemplateRef,] },],\n        \"textLabel\": [{ type: Input, args: ['label',] },],\n        \"ariaLabel\": [{ type: Input, args: ['aria-label',] },],\n        \"ariaLabelledby\": [{ type: Input, args: ['aria-labelledby',] },],\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n */\nvar /** @type {?} */ matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host) {\n        var _this = _super.call(this, componentFactoryResolver, viewContainerRef) || this;\n        _this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        _this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        _this._leavingSub = Subscription.EMPTY;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnInit = /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe(function (isCentering) {\n            if (isCentering && !_this.hasAttached()) {\n                _this.attach(_this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {\n            _this.detach();\n        });\n    };\n    /** Clean up centering subscription. */\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnDestroy = /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    function () {\n        _super.prototype.ngOnDestroy.call(this);\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    };\n    MatTabBodyPortal.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabBodyHost]'\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBodyPortal.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver, },\n        { type: ViewContainerRef, },\n        { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef(function () { return MatTabBody; }),] },] },\n    ]; };\n    return MatTabBodyPortal;\n}(CdkPortalOutlet));\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MatTabBody = /** @class */ (function () {\n    function MatTabBody(_elementRef, _dir, /**\n                   * @breaking-change 7.0.0 changeDetectorRef to be made required.\n                   */\n    /**\n     * @breaking-change 7.0.0 changeDetectorRef to be made required.\n     */\n    changeDetectorRef) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        if (this._dir && changeDetectorRef) {\n            this._dirChangeSubscription = this._dir.change.subscribe(function (dir) {\n                _this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    Object.defineProperty(MatTabBody.prototype, \"position\", {\n        set: /**\n         * The shifted index position of the tab body, where zero represents the active center tab.\n         * @param {?} position\n         * @return {?}\n         */\n        function (position) {\n            this._positionIndex = position;\n            this._computePositionAnimationState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnInit = /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    function () {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._dirChangeSubscription.unsubscribe();\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabStarted = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        var /** @type {?} */ isCentering = this._isCenterPosition(e.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabComplete = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n            this._onCentered.emit();\n        }\n        if (this._isCenterPosition(e.fromState) && !this._isCenterPosition(this._position)) {\n            this._afterLeavingCenter.emit();\n        }\n    };\n    /** The text direction of the containing app. */\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MatTabBody.prototype._getLayoutDirection = /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MatTabBody.prototype._isCenterPosition = /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @param {?=} dir\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionAnimationState = /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @param {?=} dir\n     * @return {?}\n     */\n    function (dir) {\n        if (dir === void 0) { dir = this._getLayoutDirection(); }\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    };\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @return {?}\n     */\n    MatTabBody.prototype._computePositionFromOrigin = /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    };\n    MatTabBody.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-body',\n                    template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"_position\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_onTranslateTabComplete($event)\\\"><ng-template matTabBodyHost></ng-template></div>\",\n                    styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [matTabsAnimations.translateTab],\n                    host: {\n                        'class': 'mat-tab-body',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabBody.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Directionality, decorators: [{ type: Optional },] },\n        { type: ChangeDetectorRef, },\n    ]; };\n    MatTabBody.propDecorators = {\n        \"_onCentering\": [{ type: Output },],\n        \"_beforeCentering\": [{ type: Output },],\n        \"_afterLeavingCenter\": [{ type: Output },],\n        \"_onCentered\": [{ type: Output },],\n        \"_portalHost\": [{ type: ViewChild, args: [PortalHostDirective,] },],\n        \"_content\": [{ type: Input, args: ['content',] },],\n        \"origin\": [{ type: Input },],\n        \"position\": [{ type: Input },],\n    };\n    return MatTabBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\nvar /** @type {?} */ _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.focus = /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    MatTabLabelWrapper.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLabelWrapper.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar /** @type {?} */ EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabHeaderBase = /** @class */ (function () {\n    function MatTabHeaderBase() {\n    }\n    return MatTabHeaderBase;\n}());\nvar /** @type {?} */ _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        _this._dir = _dir;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        _this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        _this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        _this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        _this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        _this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        _this._disableScrollBefore = true;\n        _this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        _this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        _this.indexFocused = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(MatTabHeader.prototype, \"selectedIndex\", {\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceNumberProperty(value);\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItemIndex(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this._updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabHeader.prototype._handleKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     */\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentInit = /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ dirChange = this._dir ? this._dir.change : of(null);\n        var /** @type {?} */ resize = this._viewportRuler.change(150);\n        var /** @type {?} */ realign = function () {\n            _this._updatePagination();\n            _this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._labelWrappers)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(function () {\n            realign();\n            _this._keyManager.withHorizontalOrientation(_this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(function (newFocusIndex) {\n            _this.indexFocused.emit(newFocusIndex);\n            _this._setTabFocus(newFocusIndex);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MatTabHeader.prototype._onContentChanges = /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    function () {\n        this._updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Updating the view whether pagination should be enabled or not\n     */\n    /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    MatTabHeader.prototype._updatePagination = /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        function () {\n            return this._keyManager ? /** @type {?} */ ((this._keyManager.activeItemIndex)) : 0;\n        },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n                return;\n            }\n            this._keyManager.setActiveItem(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabHeader.prototype._isValidIndex = /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        var /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._setTabFocus = /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /** The layout direction of the containing app. */\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getLayoutDirection = /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MatTabHeader.prototype._updateTabScrollPosition = /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ scrollDistance = this.scrollDistance;\n        var /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/material2/issues/10276\n        this._tabList.nativeElement.style.transform = \"translateX(\" + translateX + \"px)\";\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"scrollDistance\", {\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        get: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @return {?}\n         */\n        function () { return this._scrollDistance; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollHeader = /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    function (scrollDir) {\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollToLabel = /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    function (labelIndex) {\n        var /** @type {?} */ selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var /** @type {?} */ labelBeforePos, /** @type {?} */ labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        var /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n        var /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkPaginationEnabled = /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkScrollingControls = /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MatTabHeader.prototype._alignInkBarToSelectedTab = /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement(selectedLabelWrapper);\n    };\n    MatTabHeader.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-header',\n                    template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_scrollHeader('before')\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div><div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"><div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"><div class=\\\"mat-tab-labels\\\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" aria-hidden=\\\"true\\\" mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (click)=\\\"_scrollHeader('after')\\\"><div class=\\\"mat-tab-header-pagination-chevron\\\"></div></div>\",\n                    styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}\"],\n                    inputs: ['disableRipple'],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabHeader.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: ChangeDetectorRef, },\n        { type: ViewportRuler, },\n        { type: Directionality, decorators: [{ type: Optional },] },\n    ]; };\n    MatTabHeader.propDecorators = {\n        \"_labelWrappers\": [{ type: ContentChildren, args: [MatTabLabelWrapper,] },],\n        \"_inkBar\": [{ type: ViewChild, args: [MatInkBar,] },],\n        \"_tabListContainer\": [{ type: ViewChild, args: ['tabListContainer',] },],\n        \"_tabList\": [{ type: ViewChild, args: ['tabList',] },],\n        \"selectedIndex\": [{ type: Input },],\n        \"selectFocusedIndex\": [{ type: Output },],\n        \"indexFocused\": [{ type: Output },],\n    };\n    return MatTabHeader;\n}(_MatTabHeaderMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n */\nvar /** @type {?} */ nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar  /**\n * A simple change event emitted on focus or selection changes.\n */\nMatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabGroupBase = /** @class */ (function () {\n    function MatTabGroupBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupBase;\n}());\nvar /** @type {?} */ _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(elementRef, _changeDetectorRef) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        _this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        _this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        _this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        _this._tabLabelSubscription = Subscription.EMPTY;\n        _this._dynamicHeight = false;\n        _this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        _this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        _this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        _this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        _this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        _this.selectedTabChange = new EventEmitter(true);\n        _this._groupId = nextId++;\n        return _this;\n    }\n    Object.defineProperty(MatTabGroup.prototype, \"dynamicHeight\", {\n        get: /**\n         * Whether the tab group should grow to the size of the active tab.\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"selectedIndex\", {\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"backgroundColor\", {\n        get: /**\n         * Background color of the tab group.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentChecked = /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        var /** @type {?} */ indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n            var /** @type {?} */ tabChangeEvent = this._createChangeEvent(indexToSelect);\n            this.selectedTabChange.emit(tabChangeEvent);\n            // Emitting this value after change detection has run\n            // since the checked content may contain this variable'\n            Promise.resolve().then(function () { return _this.selectedIndexChange.emit(indexToSelect); });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            tab.isActive = index === indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            var /** @type {?} */ indexToSelect = _this._clampTabIndex(_this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === _this._selectedIndex) {\n                var /** @type {?} */ tabs = _this._tabs.toArray();\n                for (var /** @type {?} */ i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        _this._indexToSelect = _this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            _this._subscribeToTabLabels();\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /** Re-aligns the ink bar to the selected tab element. */\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    MatTabGroup.prototype.realignInkBar = /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    function () {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._focusChanged = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._createChangeEvent = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    MatTabGroup.prototype._subscribeToTabLabels = /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, this._tabs.map(function (tab) { return tab._disableChange; }).concat(this._tabs.map(function (tab) { return tab._labelChange; }))).subscribe(function () {\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._clampTabIndex = /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    };\n    /** Returns a unique id for each tab label element */\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabLabelId = /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabContentId = /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MatTabGroup.prototype._setTabBodyWrapperHeight = /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        var /** @type {?} */ wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MatTabGroup.prototype._removeTabBodyWrapperHeight = /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    function () {\n        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n        this._tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._handleClick = /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, tabHeader, idx) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = idx;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabIndex = /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    MatTabGroup.decorators = [\n        { type: Component, args: [{selector: 'mat-tab-group',\n                    exportAs: 'matTabGroup',\n                    template: \"<mat-tab-header #tabHeader [selectedIndex]=\\\"selectedIndex\\\" [disableRipple]=\\\"disableRipple\\\" (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"><div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\" [attr.aria-posinset]=\\\"i + 1\\\" [attr.aria-setsize]=\\\"_tabs.length\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [attr.aria-label]=\\\"tab.ariaLabel || null\\\" [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\" (click)=\\\"_handleClick(tab, tabHeader, i)\\\"><div class=\\\"mat-tab-label-content\\\"><ng-template [ngIf]=\\\"tab.templateLabel\\\"><ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template></ng-template><ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper><mat-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"></mat-tab-body></div>\",\n                    styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    inputs: ['color', 'disableRipple'],\n                    host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    },\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabGroup.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: ChangeDetectorRef, },\n    ]; };\n    MatTabGroup.propDecorators = {\n        \"_tabs\": [{ type: ContentChildren, args: [MatTab,] },],\n        \"_tabBodyWrapper\": [{ type: ViewChild, args: ['tabBodyWrapper',] },],\n        \"_tabHeader\": [{ type: ViewChild, args: ['tabHeader',] },],\n        \"dynamicHeight\": [{ type: Input },],\n        \"selectedIndex\": [{ type: Input },],\n        \"headerPosition\": [{ type: Input },],\n        \"backgroundColor\": [{ type: Input },],\n        \"selectedIndexChange\": [{ type: Output },],\n        \"focusChange\": [{ type: Output },],\n        \"animationDone\": [{ type: Output },],\n        \"selectedTabChange\": [{ type: Output },],\n    };\n    return MatTabGroup;\n}(_MatTabGroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar  /**\n * \\@docs-private\n */\nMatTabNavBase = /** @class */ (function () {\n    function MatTabNavBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatTabNavBase;\n}());\nvar /** @type {?} */ _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        _this._onDestroy = new Subject();\n        return _this;\n    }\n    Object.defineProperty(MatTabNav.prototype, \"backgroundColor\", {\n        get: /**\n         * Background color of the tab nav.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n            nativeElement.classList.remove(\"mat-background-\" + this.backgroundColor);\n            if (value) {\n                nativeElement.classList.add(\"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Notifies the component that the active link has been changed.\n     * @breaking-change 7.0.0 `element` parameter to be removed.\n     */\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 7.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    MatTabNav.prototype.updateActiveLink = /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 7.0.0 `element` parameter to be removed.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n        // @breaking-change 7.0.0\n        this._activeLinkChanged = !!element;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            var /** @type {?} */ dirChange = _this._dir ? _this._dir.change : of(null);\n            return merge(dirChange, _this._viewportRuler.change(10))\n                .pipe(takeUntil(_this._onDestroy))\n                .subscribe(function () { return _this._alignInkBar(); });\n        });\n    };\n    /** Checks if the active link has been changed and, if so, will update the ink bar. */\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentChecked = /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkChanged) {\n            var /** @type {?} */ activeTab = this._tabLinks.find(function (tab) { return tab.active; });\n            this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    };\n    /** Aligns the ink bar to the active link. */\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MatTabNav.prototype._alignInkBar = /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkElement) {\n            this._inkBar.show();\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    };\n    MatTabNav.decorators = [\n        { type: Component, args: [{selector: '[mat-tab-nav-bar]',\n                    exportAs: 'matTabNavBar, matTabNav',\n                    inputs: ['color', 'disableRipple'],\n                    template: \"<div class=\\\"mat-tab-links\\\" (cdkObserveContent)=\\\"_alignInkBar()\\\"><ng-content></ng-content><mat-ink-bar></mat-ink-bar></div>\",\n                    styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"],\n                    host: { 'class': 'mat-tab-nav-bar' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabNav.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Directionality, decorators: [{ type: Optional },] },\n        { type: NgZone, },\n        { type: ChangeDetectorRef, },\n        { type: ViewportRuler, },\n    ]; };\n    MatTabNav.propDecorators = {\n        \"_inkBar\": [{ type: ViewChild, args: [MatInkBar,] },],\n        \"_tabLinks\": [{ type: ContentChildren, args: [forwardRef(function () { return MatTabLink; }), { descendants: true },] },],\n        \"backgroundColor\": [{ type: Input },],\n    };\n    return MatTabNav;\n}(_MatTabNavMixinBase));\nvar MatTabLinkBase = /** @class */ (function () {\n    function MatTabLinkBase() {\n    }\n    return MatTabLinkBase;\n}());\nvar /** @type {?} */ _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(_tabNavBar, _elementRef, ngZone, platform, globalOptions, tabIndex, _focusMonitor) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this._elementRef = _elementRef;\n        _this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        _this._isActive = false;\n        /**\n         * Whether the ripples are globally disabled through the RippleGlobalOptions\n         */\n        _this._ripplesGloballyDisabled = false;\n        /**\n         * Ripple configuration for ripples that are launched on pointer down.\n         * \\@docs-private\n         */\n        _this.rippleConfig = {};\n        _this._tabLinkRipple = new RippleRenderer(_this, ngZone, _elementRef, platform);\n        _this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        if (globalOptions) {\n            _this._ripplesGloballyDisabled = !!globalOptions.disabled;\n            // TODO(paul): Once the speedFactor is removed, we no longer need to copy each single option.\n            // TODO(paul): Once the speedFactor is removed, we no longer need to copy each single option.\n            _this.rippleConfig = {\n                terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n                speedFactor: globalOptions.baseSpeedFactor,\n                animation: globalOptions.animation,\n            };\n        }\n        if (_focusMonitor) {\n            _focusMonitor.monitor(_elementRef.nativeElement);\n        }\n        return _this;\n    }\n    Object.defineProperty(MatTabLink.prototype, \"active\", {\n        get: /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        function () { return this._isActive; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._isActive) {\n                this._isActive = value;\n                this._tabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"rippleDisabled\", {\n        /**\n         * Whether ripples are disabled on interaction\n         * @docs-private\n         */\n        get: /**\n         * Whether ripples are disabled on interaction\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n                this._ripplesGloballyDisabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabLinkRipple._removeTriggerEvents();\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    };\n    /**\n     * Handles the click event, preventing default navigation if the tab link is disabled.\n     */\n    /**\n     * Handles the click event, preventing default navigation if the tab link is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabLink.prototype._handleClick = /**\n     * Handles the click event, preventing default navigation if the tab link is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n    };\n    MatTabLink.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link',\n                        '[attr.aria-current]': 'active',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabIndex]': 'tabIndex',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(click)': '_handleClick($event)'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    MatTabLink.ctorParameters = function () { return [\n        { type: MatTabNav, },\n        { type: ElementRef, },\n        { type: NgZone, },\n        { type: Platform, },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] },] },\n        { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n        { type: FocusMonitor, },\n    ]; };\n    MatTabLink.propDecorators = {\n        \"active\": [{ type: Input },],\n    };\n    return MatTabLink;\n}(_MatTabLinkMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    MatTabsModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                },] },\n    ];\n    return MatTabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MatInkBar, _MAT_INK_BAR_POSITIONER, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabContent, MatTabsModule, MatTabChangeEvent, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵa24, MatTabBase as ɵf24, _MatTabMixinBase as ɵg24, MatTabHeaderBase as ɵb24, _MatTabHeaderMixinBase as ɵc24, MatTabLabelWrapperBase as ɵd24, _MatTabLabelWrapperMixinBase as ɵe24, MatTabLinkBase as ɵj24, MatTabNavBase as ɵh24, _MatTabLinkMixinBase as ɵk24, _MatTabNavMixinBase as ɵi24 };\n//# sourceMappingURL=tabs.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, NgZone, Output, defineInjectable, inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nvar MutationObserverFactory = /** @class */ (function () {\n    function MutationObserverFactory() {\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    MutationObserverFactory.prototype.create = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    };\n    MutationObserverFactory.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */ MutationObserverFactory.ngInjectableDef = defineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n    return MutationObserverFactory;\n}());\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nvar ContentObserver = /** @class */ (function () {\n    function ContentObserver(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ContentObserver.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._observedElements.forEach(function (_, element) { return _this._cleanupObserver(element); });\n    };\n    /**\n     * Observe content changes on an element.\n     * @param element The element to observe for content changes.\n     */\n    /**\n     * Observe content changes on an element.\n     * @param {?} element The element to observe for content changes.\n     * @return {?}\n     */\n    ContentObserver.prototype.observe = /**\n     * Observe content changes on an element.\n     * @param {?} element The element to observe for content changes.\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            var /** @type {?} */ stream = _this._observeElement(element);\n            var /** @type {?} */ subscription = stream.subscribe(observer);\n            return function () {\n                subscription.unsubscribe();\n                _this._unobserveElement(element);\n            };\n        });\n    };\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._observeElement = /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (!this._observedElements.has(element)) {\n            var /** @type {?} */ stream_1 = new Subject();\n            var /** @type {?} */ observer = this._mutationObserverFactory.create(function (mutations) { return stream_1.next(mutations); });\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer: observer, stream: stream_1, count: 1 });\n        }\n        else {\n            /** @type {?} */ ((this._observedElements.get(element))).count++;\n        }\n        return /** @type {?} */ ((this._observedElements.get(element))).stream;\n    };\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._unobserveElement = /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            /** @type {?} */ ((this._observedElements.get(element))).count--;\n            if (!/** @type {?} */ ((this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    };\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    ContentObserver.prototype._cleanupObserver = /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (this._observedElements.has(element)) {\n            var _a = /** @type {?} */ ((this._observedElements.get(element))), observer = _a.observer, stream = _a.stream;\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    };\n    ContentObserver.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    ContentObserver.ctorParameters = function () { return [\n        { type: MutationObserverFactory, },\n    ]; };\n    /** @nocollapse */ ContentObserver.ngInjectableDef = defineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(inject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n    return ContentObserver;\n}());\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar CdkObserveContent = /** @class */ (function () {\n    function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    Object.defineProperty(CdkObserveContent.prototype, \"disabled\", {\n        get: /**\n         * Whether observing content is disabled. This option can be used\n         * to disconnect the underlying MutationObserver until it is needed.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            if (this._disabled) {\n                this._unsubscribe();\n            }\n            else {\n                this._subscribe();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CdkObserveContent.prototype, \"debounce\", {\n        get: /**\n         * Debounce interval for emitting the changes.\n         * @return {?}\n         */\n        function () { return this._debounce; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._debounce = coerceNumberProperty(value);\n            this._subscribe();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._subscribe = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._unsubscribe();\n        var /** @type {?} */ stream = this._contentObserver.observe(this._elementRef.nativeElement);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(function () {\n            _this._currentSubscription =\n                (_this.debounce ? stream.pipe(debounceTime(_this.debounce)) : stream).subscribe(_this.event);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CdkObserveContent.prototype._unsubscribe = /**\n     * @return {?}\n     */\n    function () {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    };\n    CdkObserveContent.decorators = [\n        { type: Directive, args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                },] },\n    ];\n    /** @nocollapse */\n    CdkObserveContent.ctorParameters = function () { return [\n        { type: ContentObserver, },\n        { type: ElementRef, },\n        { type: NgZone, },\n    ]; };\n    CdkObserveContent.propDecorators = {\n        \"event\": [{ type: Output, args: ['cdkObserveContent',] },],\n        \"disabled\": [{ type: Input, args: ['cdkObserveContentDisabled',] },],\n        \"debounce\": [{ type: Input },],\n    };\n    return CdkObserveContent;\n}());\nvar ObserversModule = /** @class */ (function () {\n    function ObserversModule() {\n    }\n    ObserversModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory]\n                },] },\n    ];\n    return ObserversModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nexport { MutationObserverFactory, ContentObserver, CdkObserveContent, ObserversModule };\n//# sourceMappingURL=observers.es5.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/observers\";\nimport * as i4 from \"@angular/cdk/bidi\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/cdk/portal\";\nimport * as i7 from \"@angular/cdk/platform\";\nimport * as i8 from \"@angular/cdk/a11y\";\nimport * as i9 from \"@angular/platform-browser/animations\";\nimport * as i10 from \"@angular/cdk/scrolling\";\nvar MatTabsModuleNgFactory = i0.ɵcmf(i1.MatTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.MutationObserverFactory, i3.MutationObserverFactory, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i4.BidiModule, i4.BidiModule, []), i0.ɵmpd(1073742336, i5.MatCommonModule, i5.MatCommonModule, [[2, i5.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i6.PortalModule, i6.PortalModule, []), i0.ɵmpd(1073742336, i7.PlatformModule, i7.PlatformModule, []), i0.ɵmpd(1073742336, i5.MatRippleModule, i5.MatRippleModule, []), i0.ɵmpd(1073742336, i3.ObserversModule, i3.ObserversModule, []), i0.ɵmpd(1073742336, i8.A11yModule, i8.A11yModule, []), i0.ɵmpd(1073742336, i1.MatTabsModule, i1.MatTabsModule, [])]); });\nexport { MatTabsModuleNgFactory as MatTabsModuleNgFactory };\nvar styles_MatTabGroup = [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\"];\nvar RenderType_MatTabGroup = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabGroup, data: {} });\nexport { RenderType_MatTabGroup as RenderType_MatTabGroup };\nfunction View_MatTabGroup_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_MatTabGroup_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_3)), i0.ɵdid(1, 212992, null, 0, i6.CdkPortalOutlet, [i0.ComponentFactoryResolver, i0.ViewContainerRef], { portal: [0, \"portal\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.templateLabel; _ck(_v, 1, 0, currVal_0); }, null); }\nfunction View_MatTabGroup_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.parent.context.$implicit.textLabel; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_MatTabGroup_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"div\", [[\"cdkMonitorElementFocus\", \"\"], [\"class\", \"mat-tab-label mat-ripple\"], [\"mat-ripple\", \"\"], [\"matTabLabelWrapper\", \"\"], [\"role\", \"tab\"]], [[8, \"id\", 0], [1, \"tabIndex\", 0], [1, \"aria-posinset\", 0], [1, \"aria-setsize\", 0], [1, \"aria-controls\", 0], [1, \"aria-selected\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-label-active\", null], [2, \"mat-ripple-unbounded\", null], [2, \"mat-tab-disabled\", null], [1, \"aria-disabled\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._handleClick(_v.context.$implicit, i0.ɵnov(_v.parent, 3), _v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(1, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i7.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i9.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), i0.ɵdid(2, 147456, null, 0, i8.CdkMonitorFocus, [i0.ElementRef, i8.FocusMonitor], null, null), i0.ɵdid(3, 16384, [[3, 4]], 0, i1.MatTabLabelWrapper, [i0.ElementRef], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-label-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_2)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_4)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_12 = (_v.context.$implicit.disabled || _co.disableRipple); _ck(_v, 1, 0, currVal_12); var currVal_13 = _v.context.$implicit.disabled; _ck(_v, 3, 0, currVal_13); var currVal_14 = _v.context.$implicit.templateLabel; _ck(_v, 6, 0, currVal_14); var currVal_15 = !_v.context.$implicit.templateLabel; _ck(_v, 8, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabLabelId(_v.context.index); var currVal_1 = _co._getTabIndex(_v.context.$implicit, _v.context.index); var currVal_2 = (_v.context.index + 1); var currVal_3 = _co._tabs.length; var currVal_4 = _co._getTabContentId(_v.context.index); var currVal_5 = (_co.selectedIndex == _v.context.index); var currVal_6 = (_v.context.$implicit.ariaLabel || null); var currVal_7 = ((!_v.context.$implicit.ariaLabel && _v.context.$implicit.ariaLabelledby) ? _v.context.$implicit.ariaLabelledby : null); var currVal_8 = (_co.selectedIndex == _v.context.index); var currVal_9 = i0.ɵnov(_v, 1).unbounded; var currVal_10 = i0.ɵnov(_v, 3).disabled; var currVal_11 = !!i0.ɵnov(_v, 3).disabled; _ck(_v, 0, 1, [currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11]); }); }\nfunction View_MatTabGroup_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"], [\"role\", \"tabpanel\"]], [[8, \"id\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-tab-body-active\", null]], [[null, \"_onCentered\"], [null, \"_onCentering\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"_onCentered\" === en)) {\n        var pd_0 = (_co._removeTabBodyWrapperHeight() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"_onCentering\" === en)) {\n        var pd_1 = (_co._setTabBodyWrapperHeight($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], { _content: [0, \"_content\"], origin: [1, \"origin\"], position: [2, \"position\"] }, { _onCentering: \"_onCentering\", _onCentered: \"_onCentered\" })], function (_ck, _v) { var currVal_3 = _v.context.$implicit.content; var currVal_4 = _v.context.$implicit.origin; var currVal_5 = _v.context.$implicit.position; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._getTabContentId(_v.context.index); var currVal_1 = _co._getTabLabelId(_v.context.index); var currVal_2 = (_co.selectedIndex == _v.context.index); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_MatTabGroup_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _tabBodyWrapper: 0 }), i0.ɵqud(402653184, 2, { _tabHeader: 0 }), (_l()(), i0.ɵeld(2, 0, null, null, 4, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], [[null, \"indexFocused\"], [null, \"selectFocusedIndex\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"indexFocused\" === en)) {\n        var pd_0 = (_co._focusChanged($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectFocusedIndex\" === en)) {\n        var pd_1 = ((_co.selectedIndex = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(3, 3325952, [[2, 4], [\"tabHeader\", 4]], 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i10.ViewportRuler, [2, i4.Directionality]], { disableRipple: [0, \"disableRipple\"], selectedIndex: [1, \"selectedIndex\"] }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }), i0.ɵqud(603979776, 3, { _labelWrappers: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_MatTabGroup_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(7, 0, [[1, 0], [\"tabBodyWrapper\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabGroup_5)), i0.ɵdid(9, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.disableRipple; var currVal_3 = _co.selectedIndex; _ck(_v, 3, 0, currVal_2, currVal_3); var currVal_4 = _co._tabs; _ck(_v, 6, 0, currVal_4); var currVal_5 = _co._tabs; _ck(_v, 9, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 3)._getLayoutDirection() == \"rtl\"); _ck(_v, 2, 0, currVal_0, currVal_1); }); }\nexport function View_MatTabGroup_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-group\", [[\"class\", \"mat-tab-group\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, View_MatTabGroup_0, RenderType_MatTabGroup)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef], null, null), i0.ɵqud(603979776, 1, { _tabs: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 1).headerPosition === \"below\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabGroupNgFactory = i0.ɵccf(\"mat-tab-group\", i1.MatTabGroup, View_MatTabGroup_Host_0, { color: \"color\", disableRipple: \"disableRipple\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", backgroundColor: \"backgroundColor\" }, { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, []);\nexport { MatTabGroupNgFactory as MatTabGroupNgFactory };\nvar styles_MatTabBody = [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\"];\nvar RenderType_MatTabBody = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabBody, data: { \"animation\": [{ type: 7, name: \"translateTab\", definitions: [{ type: 0, name: \"center, void, left-origin-center, right-origin-center\", styles: { type: 6, styles: { transform: \"none\" }, offset: null }, options: undefined }, { type: 0, name: \"left\", styles: { type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 0, name: \"right\", styles: { type: 6, styles: { transform: \"translate3d(100%, 0, 0)\", minHeight: \"1px\" }, offset: null }, options: undefined }, { type: 1, expr: \"* => left, * => right, left => center, right => center\", animation: { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }, options: null }, { type: 1, expr: \"void => left-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(-100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }, { type: 1, expr: \"void => right-origin-center\", animation: [{ type: 6, styles: { transform: \"translate3d(100%, 0, 0)\" }, offset: null }, { type: 4, styles: null, timings: \"500ms cubic-bezier(0.35, 0, 0.25, 1)\" }], options: null }], options: {} }] } });\nexport { RenderType_MatTabBody as RenderType_MatTabBody };\nfunction View_MatTabBody_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTabBody_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _portalHost: 0 }), (_l()(), i0.ɵeld(1, 0, [[\"content\", 1]], null, 2, \"div\", [[\"class\", \"mat-tab-body-content\"]], [[24, \"@translateTab\", 0]], [[null, \"@translateTab.start\"], [null, \"@translateTab.done\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"@translateTab.start\" === en)) {\n        var pd_0 = (_co._onTranslateTabStarted($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"@translateTab.done\" === en)) {\n        var pd_1 = (_co._onTranslateTabComplete($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_MatTabBody_1)), i0.ɵdid(3, 212992, null, 0, i1.MatTabBodyPortal, [i0.ComponentFactoryResolver, i0.ViewContainerRef, i1.MatTabBody], null, null)], function (_ck, _v) { _ck(_v, 3, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._position; _ck(_v, 1, 0, currVal_0); }); }\nexport function View_MatTabBody_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mat-tab-body\", [[\"class\", \"mat-tab-body\"]], null, null, null, View_MatTabBody_0, RenderType_MatTabBody)), i0.ɵdid(1, 245760, null, 0, i1.MatTabBody, [i0.ElementRef, [2, i4.Directionality], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabBodyNgFactory = i0.ɵccf(\"mat-tab-body\", i1.MatTabBody, View_MatTabBody_Host_0, { _content: \"content\", origin: \"origin\", position: \"position\" }, { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, []);\nexport { MatTabBodyNgFactory as MatTabBodyNgFactory };\nvar styles_MatTabHeader = [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-label:focus{outline:dotted 2px}}.mat-tab-label.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-label.mat-tab-disabled{opacity:.5}}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-label{opacity:1}}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}\"];\nvar RenderType_MatTabHeader = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabHeader, data: {} });\nexport { RenderType_MatTabHeader as RenderType_MatTabHeader };\nexport function View_MatTabHeader_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), i0.ɵqud(402653184, 2, { _tabListContainer: 0 }), i0.ɵqud(402653184, 3, { _tabList: 0 }), (_l()(), i0.ɵeld(3, 0, null, null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._scrollHeader(\"before\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(4, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i7.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i9.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, [[2, 0], [\"tabListContainer\", 1]], null, 6, \"div\", [[\"class\", \"mat-tab-label-container\"]], null, [[null, \"keydown\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (_co._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(7, 0, [[3, 0], [\"tabList\", 1]], null, 5, \"div\", [[\"class\", \"mat-tab-list\"], [\"role\", \"tablist\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onContentChanges() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(8, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"div\", [[\"class\", \"mat-tab-labels\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(12, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null), (_l()(), i0.ɵeld(13, 0, null, null, 2, \"div\", [[\"aria-hidden\", \"true\"], [\"class\", \"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-tab-header-pagination-disabled\", null], [2, \"mat-ripple-unbounded\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._scrollHeader(\"after\") !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(14, 212992, null, 0, i5.MatRipple, [i0.ElementRef, i0.NgZone, i7.Platform, [2, i5.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i9.ANIMATION_MODULE_TYPE]], { disabled: [0, \"disabled\"] }, null), (_l()(), i0.ɵeld(15, 0, null, null, 0, \"div\", [[\"class\", \"mat-tab-header-pagination-chevron\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_2 = (_co._disableScrollBefore || _co.disableRipple); _ck(_v, 4, 0, currVal_2); var currVal_5 = (_co._disableScrollAfter || _co.disableRipple); _ck(_v, 14, 0, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._disableScrollBefore; var currVal_1 = i0.ɵnov(_v, 4).unbounded; _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_3 = _co._disableScrollAfter; var currVal_4 = i0.ɵnov(_v, 14).unbounded; _ck(_v, 13, 0, currVal_3, currVal_4); }); }\nexport function View_MatTabHeader_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-tab-header\", [[\"class\", \"mat-tab-header\"]], [[2, \"mat-tab-header-pagination-controls-enabled\", null], [2, \"mat-tab-header-rtl\", null]], null, null, View_MatTabHeader_0, RenderType_MatTabHeader)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabHeader, [i0.ElementRef, i0.ChangeDetectorRef, i10.ViewportRuler, [2, i4.Directionality]], null, null), i0.ɵqud(603979776, 1, { _labelWrappers: 1 })], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._showPaginationControls; var currVal_1 = (i0.ɵnov(_v, 1)._getLayoutDirection() == \"rtl\"); _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar MatTabHeaderNgFactory = i0.ɵccf(\"mat-tab-header\", i1.MatTabHeader, View_MatTabHeader_Host_0, { disableRipple: \"disableRipple\", selectedIndex: \"selectedIndex\" }, { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, [\"*\"]);\nexport { MatTabHeaderNgFactory as MatTabHeaderNgFactory };\nvar styles_MatTab = [];\nvar RenderType_MatTab = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTab, data: {} });\nexport { RenderType_MatTab as RenderType_MatTab };\nfunction View_MatTab_1(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_MatTab_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _implicitContent: 0 }), (_l()(), i0.ɵand(0, [[1, 2]], null, 0, null, View_MatTab_1))], null, null); }\nexport function View_MatTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 3, \"mat-tab\", [], null, null, null, View_MatTab_0, RenderType_MatTab)), i0.ɵdid(1, 770048, null, 2, i1.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(335544320, 1, { templateLabel: 0 }), i0.ɵqud(335544320, 2, { _explicitContent: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar MatTabNgFactory = i0.ɵccf(\"mat-tab\", i1.MatTab, View_MatTab_Host_0, { disabled: \"disabled\", textLabel: \"label\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\" }, {}, [\"*\"]);\nexport { MatTabNgFactory as MatTabNgFactory };\nvar styles_MatTabNav = [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative;display:flex}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:0}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}@media screen and (-ms-high-contrast:active){.mat-tab-link:focus{outline:dotted 2px}}.mat-tab-link.mat-tab-disabled{cursor:default}@media screen and (-ms-high-contrast:active){.mat-tab-link.mat-tab-disabled{opacity:.5}}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media screen and (-ms-high-contrast:active){.mat-tab-link{opacity:1}}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}@media (max-width:599px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}\"];\nvar RenderType_MatTabNav = i0.ɵcrt({ encapsulation: 2, styles: styles_MatTabNav, data: {} });\nexport { RenderType_MatTabNav as RenderType_MatTabNav };\nexport function View_MatTabNav_0(_l) { return i0.ɵvid(2, [i0.ɵqud(402653184, 1, { _inkBar: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"mat-tab-links\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._alignInkBar() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(2, 1196032, null, 0, i3.CdkObserveContent, [i3.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"mat-ink-bar\", [[\"class\", \"mat-ink-bar\"]], null, null, null, null, null)), i0.ɵdid(5, 16384, [[1, 4]], 0, i1.MatInkBar, [i0.ElementRef, i0.NgZone, i1._MAT_INK_BAR_POSITIONER], null, null)], null, null); }\nexport function View_MatTabNav_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"mat-tab-nav-bar\"], [\"mat-tab-nav-bar\", \"\"]], null, null, null, View_MatTabNav_0, RenderType_MatTabNav)), i0.ɵdid(1, 3325952, null, 1, i1.MatTabNav, [i0.ElementRef, [2, i4.Directionality], i0.NgZone, i0.ChangeDetectorRef, i10.ViewportRuler], null, null), i0.ɵqud(603979776, 1, { _tabLinks: 1 })], null, null); }\nvar MatTabNavNgFactory = i0.ɵccf(\"[mat-tab-nav-bar]\", i1.MatTabNav, View_MatTabNav_Host_0, { color: \"color\", disableRipple: \"disableRipple\", backgroundColor: \"backgroundColor\" }, {}, [\"*\"]);\nexport { MatTabNavNgFactory as MatTabNavNgFactory };\n","<mat-tab-header #tabHeader [selectedIndex]=\"selectedIndex\" [disableRipple]=\"disableRipple\" (indexFocused)=\"_focusChanged($event)\" (selectFocusedIndex)=\"selectedIndex = $event\"><div class=\"mat-tab-label\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabLabelId(i)\" [attr.tabIndex]=\"_getTabIndex(tab, i)\" [attr.aria-posinset]=\"i + 1\" [attr.aria-setsize]=\"_tabs.length\" [attr.aria-controls]=\"_getTabContentId(i)\" [attr.aria-selected]=\"selectedIndex == i\" [attr.aria-label]=\"tab.ariaLabel || null\" [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\" [class.mat-tab-label-active]=\"selectedIndex == i\" [disabled]=\"tab.disabled\" [matRippleDisabled]=\"tab.disabled || disableRipple\" (click)=\"_handleClick(tab, tabHeader, i)\"><div class=\"mat-tab-label-content\"><ng-template [ngIf]=\"tab.templateLabel\"><ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template></ng-template><ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template></div></div></mat-tab-header><div class=\"mat-tab-body-wrapper\" #tabBodyWrapper><mat-tab-body role=\"tabpanel\" *ngFor=\"let tab of _tabs; let i = index\" [id]=\"_getTabContentId(i)\" [attr.aria-labelledby]=\"_getTabLabelId(i)\" [class.mat-tab-body-active]=\"selectedIndex == i\" [content]=\"tab.content\" [position]=\"tab.position\" [origin]=\"tab.origin\" (_onCentered)=\"_removeTabBodyWrapperHeight()\" (_onCentering)=\"_setTabBodyWrapperHeight($event)\"></mat-tab-body></div>","<div class=\"mat-tab-body-content\" #content [@translateTab]=\"_position\" (@translateTab.start)=\"_onTranslateTabStarted($event)\" (@translateTab.done)=\"_onTranslateTabComplete($event)\"><ng-template matTabBodyHost></ng-template></div>","<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\" (click)=\"_scrollHeader('before')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div><div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\"><div class=\"mat-tab-list\" #tabList role=\"tablist\" (cdkObserveContent)=\"_onContentChanges()\"><div class=\"mat-tab-labels\"><ng-content></ng-content></div><mat-ink-bar></mat-ink-bar></div></div><div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\" aria-hidden=\"true\" mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\" [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\" (click)=\"_scrollHeader('after')\"><div class=\"mat-tab-header-pagination-chevron\"></div></div>","<ng-template><ng-content></ng-content></ng-template>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../node_modules/@angular/material/tabs/typings/index.ngfactory\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code.component\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"./pretty-printer.service\";\nimport * as i7 from \"../../shared/copier.service\";\nimport * as i8 from \"../../shared/logger.service\";\nimport * as i9 from \"../../shared/stackblitz.service\";\nimport * as i10 from \"../../../../node_modules/@angular/material/card/typings/index.ngfactory\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"./code-tabs.component\";\nvar styles_CodeTabsComponent = [];\nvar RenderType_CodeTabsComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CodeTabsComponent, data: {} });\nexport { RenderType_CodeTabsComponent as RenderType_CodeTabsComponent };\nfunction View_CodeTabsComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.parent.context.$implicit.class, \"\"); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.title; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_CodeTabsComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 7, \"mat-tab\", [[\"style\", \"overflow-y: hidden;\"]], null, null, null, i1.View_MatTab_0, i1.RenderType_MatTab)), i0.ɵdid(1, 770048, [[3, 4]], 2, i2.MatTab, [i0.ViewContainerRef], null, null), i0.ɵqud(335544320, 4, { templateLabel: 0 }), i0.ɵqud(335544320, 5, { _explicitContent: 0 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_CodeTabsComponent_2)), i0.ɵdid(5, 16384, [[4, 4]], 0, i2.MatTabLabel, [i0.TemplateRef, i0.ViewContainerRef], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 1, \"aio-code\", [], [[8, \"className\", 0]], null, null, i3.View_CodeComponent_0, i3.RenderType_CodeComponent)), i0.ɵdid(7, 573440, [[2, 4]], 0, i4.CodeComponent, [i5.MatSnackBar, i6.PrettyPrinter, i7.CopierService, i8.Logger, i9.StackblitzService], { language: [0, \"language\"], linenums: [1, \"linenums\"], path: [2, \"path\"], region: [3, \"region\"], title: [4, \"title\"] }, null), (_l()(), i0.ɵand(0, null, null, 0))], function (_ck, _v) { _ck(_v, 1, 0); var currVal_1 = _v.context.$implicit.language; var currVal_2 = _v.context.$implicit.linenums; var currVal_3 = _v.context.$implicit.path; var currVal_4 = _v.context.$implicit.region; var currVal_5 = _v.context.$implicit.title; _ck(_v, 7, 0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.class, \"\"); _ck(_v, 6, 0, currVal_0); }); }\nexport function View_CodeTabsComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { content: 0 }), i0.ɵqud(671088640, 2, { codeComponents: 1 }), (_l()(), i0.ɵeld(2, 0, [[1, 0], [\"content\", 1]], null, 1, \"div\", [[\"style\", \"display: none\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"mat-card\", [[\"class\", \"mat-card\"]], null, null, null, i10.View_MatCard_0, i10.RenderType_MatCard)), i0.ɵdid(5, 49152, null, 0, i11.MatCard, [], null, null), (_l()(), i0.ɵeld(6, 0, null, 0, 4, \"mat-tab-group\", [[\"class\", \"code-tab-group mat-tab-group\"], [\"disableRipple\", \"\"]], [[2, \"mat-tab-group-dynamic-height\", null], [2, \"mat-tab-group-inverted-header\", null]], null, null, i1.View_MatTabGroup_0, i1.RenderType_MatTabGroup)), i0.ɵdid(7, 3325952, null, 1, i2.MatTabGroup, [i0.ElementRef, i0.ChangeDetectorRef], { disableRipple: [0, \"disableRipple\"] }, null), i0.ɵqud(603979776, 3, { _tabs: 1 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_CodeTabsComponent_1)), i0.ɵdid(10, 278528, null, 0, i12.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_2 = \"\"; _ck(_v, 7, 0, currVal_2); var currVal_3 = _co.tabs; _ck(_v, 10, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 7).dynamicHeight; var currVal_1 = (i0.ɵnov(_v, 7).headerPosition === \"below\"); _ck(_v, 6, 0, currVal_0, currVal_1); }); }\nexport function View_CodeTabsComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"code-tabs\", [], null, null, null, View_CodeTabsComponent_0, RenderType_CodeTabsComponent)), i0.ɵdid(1, 4308992, null, 0, i13.CodeTabsComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar CodeTabsComponentNgFactory = i0.ɵccf(\"code-tabs\", i13.CodeTabsComponent, View_CodeTabsComponent_Host_0, { linenums: \"linenums\" }, {}, [\"*\"]);\nexport { CodeTabsComponentNgFactory as CodeTabsComponentNgFactory };\n","\n    <!-- Use content projection so that the provided HTML's code-panes can be split into tabs -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <mat-card>\n      <mat-tab-group class=\"code-tab-group\" disableRipple>\n        <mat-tab style=\"overflow-y: hidden;\" *ngFor=\"let tab of tabs\">\n          <ng-template mat-tab-label>\n            <span class=\"{{ tab.class }}\">{{ tab.title }}</span>\n          </ng-template>\n          <aio-code class=\"{{ tab.class }}\"\n                    [language]=\"tab.language\"\n                    [linenums]=\"tab.linenums\"\n                    [path]=\"tab.path\"\n                    [region]=\"tab.region\"\n                    [title]=\"tab.title\">\n          </aio-code>\n        </mat-tab>\n      </mat-tab-group>\n    </mat-card>\n  ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./code-tabs.module\";\nimport * as i2 from \"../../../../node_modules/@angular/material/snack-bar/typings/index.ngfactory\";\nimport * as i3 from \"./code.component.ngfactory\";\nimport * as i4 from \"./code-tabs.component.ngfactory\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/cdk/observers\";\nimport * as i7 from \"@angular/cdk/overlay\";\nimport * as i8 from \"@angular/cdk/bidi\";\nimport * as i9 from \"./pretty-printer.service\";\nimport * as i10 from \"../../shared/logger.service\";\nimport * as i11 from \"../../shared/copier.service\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/card\";\nimport * as i14 from \"@angular/cdk/portal\";\nimport * as i15 from \"@angular/cdk/platform\";\nimport * as i16 from \"@angular/cdk/a11y\";\nimport * as i17 from \"@angular/material/tabs\";\nimport * as i18 from \"@angular/cdk/scrolling\";\nimport * as i19 from \"@angular/material/button\";\nimport * as i20 from \"@angular/material/snack-bar\";\nimport * as i21 from \"./code.module\";\nvar CodeTabsModuleNgFactory = i0.ɵcmf(i1.CodeTabsModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.MatSnackBarContainerNgFactory, i2.SimpleSnackBarNgFactory, i3.CodeComponentNgFactory, i4.CodeTabsComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i5.NgLocalization, i5.NgLocaleLocalization, [i0.LOCALE_ID, [2, i5.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i6.MutationObserverFactory, i6.MutationObserverFactory, []), i0.ɵmpd(4608, i7.Overlay, i7.Overlay, [i7.ScrollStrategyOptions, i7.OverlayContainer, i0.ComponentFactoryResolver, i7.OverlayPositionBuilder, i7.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i5.DOCUMENT, i8.Directionality]), i0.ɵmpd(5120, i7.ɵc, i7.ɵd, [i7.Overlay]), i0.ɵmpd(4608, i9.PrettyPrinter, i9.PrettyPrinter, [i10.Logger]), i0.ɵmpd(4608, i11.CopierService, i11.CopierService, []), i0.ɵmpd(1073742336, i5.CommonModule, i5.CommonModule, []), i0.ɵmpd(1073742336, i8.BidiModule, i8.BidiModule, []), i0.ɵmpd(1073742336, i12.MatCommonModule, i12.MatCommonModule, [[2, i12.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(1073742336, i13.MatCardModule, i13.MatCardModule, []), i0.ɵmpd(1073742336, i14.PortalModule, i14.PortalModule, []), i0.ɵmpd(1073742336, i15.PlatformModule, i15.PlatformModule, []), i0.ɵmpd(1073742336, i12.MatRippleModule, i12.MatRippleModule, []), i0.ɵmpd(1073742336, i6.ObserversModule, i6.ObserversModule, []), i0.ɵmpd(1073742336, i16.A11yModule, i16.A11yModule, []), i0.ɵmpd(1073742336, i17.MatTabsModule, i17.MatTabsModule, []), i0.ɵmpd(1073742336, i18.ScrollDispatchModule, i18.ScrollDispatchModule, []), i0.ɵmpd(1073742336, i7.OverlayModule, i7.OverlayModule, []), i0.ɵmpd(1073742336, i19.MatButtonModule, i19.MatButtonModule, []), i0.ɵmpd(1073742336, i20.MatSnackBarModule, i20.MatSnackBarModule, []), i0.ɵmpd(1073742336, i21.CodeModule, i21.CodeModule, []), i0.ɵmpd(1073742336, i1.CodeTabsModule, i1.CodeTabsModule, [])]); });\nexport { CodeTabsModuleNgFactory as CodeTabsModuleNgFactory };\n"],"sourceRoot":""}